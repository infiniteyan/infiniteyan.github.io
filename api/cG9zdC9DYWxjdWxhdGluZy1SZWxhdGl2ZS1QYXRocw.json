{"title":"Calculating Relative Paths","date":"2019-03-01T09:36:21.000Z","slug":"Calculating-Relative-Paths","comments":true,"updated":"2019-03-01T09:45:23.437Z","content":"<h5 id=\"Problem-Description\">Problem Description<a href=\"post/Calculating-Relative-Paths#Problem-Description\"></a></h5><p>There are two paths, a and b. Calculating relative paths between each other.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">#include&lt;stdlib.h&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">int CalculateSperatorNum(const char* str) &#123;</span><br><span class=\"line\">\tint count = 0;</span><br><span class=\"line\">\tfor (; *str; str++) &#123;</span><br><span class=\"line\">\t\tif (*str == &apos;/&apos;)</span><br><span class=\"line\">\t        count++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn count;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">void RelativePath(const char* strA, const char* strB, char*&amp; result) &#123;</span><br><span class=\"line\">\tif (NULL == strA || NULL == strB) &#123;</span><br><span class=\"line\">\t    return;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">\tint sepA = CalculateSperatorNum(strA);</span><br><span class=\"line\">\tint sepB = CalculateSperatorNum(strB);</span><br><span class=\"line\"> </span><br><span class=\"line\">\tconst char* ptrA = strA;</span><br><span class=\"line\">\tconst char* ptrB = strB;</span><br><span class=\"line\">\tconst char *p1 = NULL, *p2 = NULL;</span><br><span class=\"line\"> </span><br><span class=\"line\">\twhile ((*ptrA == *ptrB) &amp;&amp; *ptrA != &apos;\\0&apos;) &#123;</span><br><span class=\"line\">\t    ptrA++;</span><br><span class=\"line\">\t    ptrB++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tif (*ptrA == &apos;\\0&apos;)&#123;</span><br><span class=\"line\">\t\treturn;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tif (sepA &gt; sepB) &#123; </span><br><span class=\"line\">\t\tp1 = ptrA;</span><br><span class=\"line\">\t\tp2 = ptrB;</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t    p2 = ptrA;</span><br><span class=\"line\">\t    p1 = ptrB;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">\tint n = CalculateSperatorNum(p1);</span><br><span class=\"line\">\tconst char* p = p2;</span><br><span class=\"line\"> </span><br><span class=\"line\">\tint len = 0;</span><br><span class=\"line\">\twhile (*p++ != &apos;\\0&apos;) &#123;</span><br><span class=\"line\">\t\tlen++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tresult = (char *)malloc(sizeof(char) * (n * 3 + len + 1));</span><br><span class=\"line\"> </span><br><span class=\"line\">\tint i = 0;</span><br><span class=\"line\">\tfor(i = 0; i &lt; n * 3; i += 3) &#123;</span><br><span class=\"line\">\t\t*(result + i) = &apos;.&apos;;</span><br><span class=\"line\">\t\t*(result + i + 1) = &apos;.&apos;;</span><br><span class=\"line\">\t\t*(result + i + 2) = &apos;/&apos;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\twhile (*p2 != &apos;\\0&apos;) &#123;</span><br><span class=\"line\">\t\t*(result + i++) = *p2;</span><br><span class=\"line\">\t\tp2++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*(result + i) = &apos;\\0&apos;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">int main (int argc, char** argv) &#123;</span><br><span class=\"line\">\tchar* a = &quot;/qihoo/app/1/2/jtest.c&quot;;</span><br><span class=\"line\">\tchar* b = &quot;/qihoo/app/a/b/c/d/df/fa/new.c&quot;;</span><br><span class=\"line\">\tchar* r = NULL;</span><br><span class=\"line\">\tRelativePath(a, b, r);</span><br><span class=\"line\">\tprintf(&quot;%s\\n&quot;, r);</span><br><span class=\"line\"> </span><br><span class=\"line\">\tfree(r);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","next":{"title":"XCode抓取OpenGL渲染帧","slug":"XCode抓取OpenGL渲染帧"},"link":"http://yoursite.com/post/Calculating-Relative-Paths/"}