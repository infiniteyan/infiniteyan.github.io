{"title":"Iris框架MVC例子","date":"2019-05-12T06:19:01.000Z","slug":"Iris框架MVC例子","comments":true,"updated":"2019-05-12T06:30:48.632Z","content":"<p>user.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package datamodels</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;time&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&quot;golang.org/x/crypto/bcrypt&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">// User is our User example model.</span><br><span class=\"line\">// Keep note that the tags for public-use (for our web app)</span><br><span class=\"line\">// should be kept in other file like &quot;web/viewmodels/user.go&quot;</span><br><span class=\"line\">// which could wrap by embedding the datamodels.User or</span><br><span class=\"line\">// define completely new fields instead but for the shake</span><br><span class=\"line\">// of the example, we will use this datamodel</span><br><span class=\"line\">// as the only one User model in our application.</span><br><span class=\"line\">type User struct &#123;</span><br><span class=\"line\">\tID             int64     `json:&quot;id&quot; form:&quot;id&quot;`</span><br><span class=\"line\">\tFirstname      string    `json:&quot;firstname&quot; form:&quot;firstname&quot;`</span><br><span class=\"line\">\tUsername       string    `json:&quot;username&quot; form:&quot;username&quot;`</span><br><span class=\"line\">\tHashedPassword []byte    `json:&quot;-&quot; form:&quot;-&quot;`</span><br><span class=\"line\">\tCreatedAt      time.Time `json:&quot;created_at&quot; form:&quot;created_at&quot;`</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// IsValid can do some very very simple &quot;low-level&quot; data validations.</span><br><span class=\"line\">func (u User) IsValid() bool &#123;</span><br><span class=\"line\">\treturn u.ID &gt; 0</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// GeneratePassword will generate a hashed password for us based on the</span><br><span class=\"line\">// user&apos;s input.</span><br><span class=\"line\">func GeneratePassword(userPassword string) ([]byte, error) &#123;</span><br><span class=\"line\">\treturn bcrypt.GenerateFromPassword([]byte(userPassword), bcrypt.DefaultCost)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// ValidatePassword will check if passwords are matched.</span><br><span class=\"line\">func ValidatePassword(userPassword string, hashed []byte) (bool, error) &#123;</span><br><span class=\"line\">\tif err := bcrypt.CompareHashAndPassword(hashed, []byte(userPassword)); err != nil &#123;</span><br><span class=\"line\">\t\treturn false, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn true, nil</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>users.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package datasource</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;errors&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&quot;github.com/kataras/iris/_examples/mvc/login/datamodels&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">// Engine is from where to fetch the data, in this case the users.</span><br><span class=\"line\">type Engine uint32</span><br><span class=\"line\"></span><br><span class=\"line\">const (</span><br><span class=\"line\">\t// Memory stands for simple memory location;</span><br><span class=\"line\">\t// map[int64] datamodels.User ready to use, it&apos;s our source in this example.</span><br><span class=\"line\">\tMemory Engine = iota</span><br><span class=\"line\">\t// Bolt for boltdb source location.</span><br><span class=\"line\">\tBolt</span><br><span class=\"line\">\t// MySQL for mysql-compatible source location.</span><br><span class=\"line\">\tMySQL</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">// LoadUsers returns all users(empty map) from the memory, for the shake of simplicty.</span><br><span class=\"line\">func LoadUsers(engine Engine) (map[int64]datamodels.User, error) &#123;</span><br><span class=\"line\">\tif engine != Memory &#123;</span><br><span class=\"line\">\t\treturn nil, errors.New(&quot;for the shake of simplicity we&apos;re using a simple map as the data source&quot;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn make(map[int64]datamodels.User), nil</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>user_repository.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package repositories</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;errors&quot;</span><br><span class=\"line\">\t&quot;sync&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&quot;github.com/kataras/iris/_examples/mvc/login/datamodels&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">// Query represents the visitor and action queries.</span><br><span class=\"line\">type Query func(datamodels.User) bool</span><br><span class=\"line\"></span><br><span class=\"line\">// UserRepository handles the basic operations of a user entity/model.</span><br><span class=\"line\">// It&apos;s an interface in order to be testable, i.e a memory user repository or</span><br><span class=\"line\">// a connected to an sql database.</span><br><span class=\"line\">type UserRepository interface &#123;</span><br><span class=\"line\">\tExec(query Query, action Query, limit int, mode int) (ok bool)</span><br><span class=\"line\"></span><br><span class=\"line\">\tSelect(query Query) (user datamodels.User, found bool)</span><br><span class=\"line\">\tSelectMany(query Query, limit int) (results []datamodels.User)</span><br><span class=\"line\"></span><br><span class=\"line\">\tInsertOrUpdate(user datamodels.User) (updatedUser datamodels.User, err error)</span><br><span class=\"line\">\tDelete(query Query, limit int) (deleted bool)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// NewUserRepository returns a new user memory-based repository,</span><br><span class=\"line\">// the one and only repository type in our example.</span><br><span class=\"line\">func NewUserRepository(source map[int64]datamodels.User) UserRepository &#123;</span><br><span class=\"line\">\treturn &amp;userMemoryRepository&#123;source: source&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// userMemoryRepository is a &quot;UserRepository&quot;</span><br><span class=\"line\">// which manages the users using the memory data source (map).</span><br><span class=\"line\">type userMemoryRepository struct &#123;</span><br><span class=\"line\">\tsource map[int64]datamodels.User</span><br><span class=\"line\">\tmu     sync.RWMutex</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">const (</span><br><span class=\"line\">\t// ReadOnlyMode will RLock(read) the data .</span><br><span class=\"line\">\tReadOnlyMode = iota</span><br><span class=\"line\">\t// ReadWriteMode will Lock(read/write) the data.</span><br><span class=\"line\">\tReadWriteMode</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func (r *userMemoryRepository) Exec(query Query, action Query, actionLimit int, mode int) (ok bool) &#123;</span><br><span class=\"line\">\tloops := 0</span><br><span class=\"line\"></span><br><span class=\"line\">\tif mode == ReadOnlyMode &#123;</span><br><span class=\"line\">\t\tr.mu.RLock()</span><br><span class=\"line\">\t\tdefer r.mu.RUnlock()</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tr.mu.Lock()</span><br><span class=\"line\">\t\tdefer r.mu.Unlock()</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor _, user := range r.source &#123;</span><br><span class=\"line\">\t\tok = query(user)</span><br><span class=\"line\">\t\tif ok &#123;</span><br><span class=\"line\">\t\t\tif action(user) &#123;</span><br><span class=\"line\">\t\t\t\tloops++</span><br><span class=\"line\">\t\t\t\tif actionLimit &gt;= loops &#123;</span><br><span class=\"line\">\t\t\t\t\tbreak // break</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Select receives a query function</span><br><span class=\"line\">// which is fired for every single user model inside</span><br><span class=\"line\">// our imaginary data source.</span><br><span class=\"line\">// When that function returns true then it stops the iteration.</span><br><span class=\"line\">//</span><br><span class=\"line\">// It returns the query&apos;s return last known boolean value</span><br><span class=\"line\">// and the last known user model</span><br><span class=\"line\">// to help callers to reduce the LOC.</span><br><span class=\"line\">//</span><br><span class=\"line\">// It&apos;s actually a simple but very clever prototype function</span><br><span class=\"line\">// I&apos;m using everywhere since I firstly think of it,</span><br><span class=\"line\">// hope you&apos;ll find it very useful as well.</span><br><span class=\"line\">func (r *userMemoryRepository) Select(query Query) (user datamodels.User, found bool) &#123;</span><br><span class=\"line\">\tfound = r.Exec(query, func(m datamodels.User) bool &#123;</span><br><span class=\"line\">\t\tuser = m</span><br><span class=\"line\">\t\treturn true</span><br><span class=\"line\">\t&#125;, 1, ReadOnlyMode)</span><br><span class=\"line\"></span><br><span class=\"line\">\t// set an empty datamodels.User if not found at all.</span><br><span class=\"line\">\tif !found &#123;</span><br><span class=\"line\">\t\tuser = datamodels.User&#123;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// SelectMany same as Select but returns one or more datamodels.User as a slice.</span><br><span class=\"line\">// If limit &lt;=0 then it returns everything.</span><br><span class=\"line\">func (r *userMemoryRepository) SelectMany(query Query, limit int) (results []datamodels.User) &#123;</span><br><span class=\"line\">\tr.Exec(query, func(m datamodels.User) bool &#123;</span><br><span class=\"line\">\t\tresults = append(results, m)</span><br><span class=\"line\">\t\treturn true</span><br><span class=\"line\">\t&#125;, limit, ReadOnlyMode)</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// InsertOrUpdate adds or updates a user to the (memory) storage.</span><br><span class=\"line\">//</span><br><span class=\"line\">// Returns the new user and an error if any.</span><br><span class=\"line\">func (r *userMemoryRepository) InsertOrUpdate(user datamodels.User) (datamodels.User, error) &#123;</span><br><span class=\"line\">\tid := user.ID</span><br><span class=\"line\"></span><br><span class=\"line\">\tif id == 0 &#123; // Create new action</span><br><span class=\"line\">\t\tvar lastID int64</span><br><span class=\"line\">\t\t// find the biggest ID in order to not have duplications</span><br><span class=\"line\">\t\t// in productions apps you can use a third-party</span><br><span class=\"line\">\t\t// library to generate a UUID as string.</span><br><span class=\"line\">\t\tr.mu.RLock()</span><br><span class=\"line\">\t\tfor _, item := range r.source &#123;</span><br><span class=\"line\">\t\t\tif item.ID &gt; lastID &#123;</span><br><span class=\"line\">\t\t\t\tlastID = item.ID</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tr.mu.RUnlock()</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tid = lastID + 1</span><br><span class=\"line\">\t\tuser.ID = id</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// map-specific thing</span><br><span class=\"line\">\t\tr.mu.Lock()</span><br><span class=\"line\">\t\tr.source[id] = user</span><br><span class=\"line\">\t\tr.mu.Unlock()</span><br><span class=\"line\"></span><br><span class=\"line\">\t\treturn user, nil</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t// Update action based on the user.ID,</span><br><span class=\"line\">\t// here we will allow updating the poster and genre if not empty.</span><br><span class=\"line\">\t// Alternatively we could do pure replace instead:</span><br><span class=\"line\">\t// r.source[id] = user</span><br><span class=\"line\">\t// and comment the code below;</span><br><span class=\"line\">\tcurrent, exists := r.Select(func(m datamodels.User) bool &#123;</span><br><span class=\"line\">\t\treturn m.ID == id</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tif !exists &#123; // ID is not a real one, return an error.</span><br><span class=\"line\">\t\treturn datamodels.User&#123;&#125;, errors.New(&quot;failed to update a nonexistent user&quot;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t// or comment these and r.source[id] = user for pure replace</span><br><span class=\"line\">\tif user.Username != &quot;&quot; &#123;</span><br><span class=\"line\">\t\tcurrent.Username = user.Username</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif user.Firstname != &quot;&quot; &#123;</span><br><span class=\"line\">\t\tcurrent.Firstname = user.Firstname</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t// map-specific thing</span><br><span class=\"line\">\tr.mu.Lock()</span><br><span class=\"line\">\tr.source[id] = current</span><br><span class=\"line\">\tr.mu.Unlock()</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn user, nil</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (r *userMemoryRepository) Delete(query Query, limit int) bool &#123;</span><br><span class=\"line\">\treturn r.Exec(query, func(m datamodels.User) bool &#123;</span><br><span class=\"line\">\t\tdelete(r.source, m.ID)</span><br><span class=\"line\">\t\treturn true</span><br><span class=\"line\">\t&#125;, limit, ReadWriteMode)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>user_service.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package services</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;errors&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&quot;github.com/kataras/iris/_examples/mvc/login/datamodels&quot;</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/_examples/mvc/login/repositories&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">// UserService handles CRUID operations of a user datamodel,</span><br><span class=\"line\">// it depends on a user repository for its actions.</span><br><span class=\"line\">// It&apos;s here to decouple the data source from the higher level compoments.</span><br><span class=\"line\">// As a result a different repository type can be used with the same logic without any aditional changes.</span><br><span class=\"line\">// It&apos;s an interface and it&apos;s used as interface everywhere</span><br><span class=\"line\">// because we may need to change or try an experimental different domain logic at the future.</span><br><span class=\"line\">type UserService interface &#123;</span><br><span class=\"line\">\tGetAll() []datamodels.User</span><br><span class=\"line\">\tGetByID(id int64) (datamodels.User, bool)</span><br><span class=\"line\">\tGetByUsernameAndPassword(username, userPassword string) (datamodels.User, bool)</span><br><span class=\"line\">\tDeleteByID(id int64) bool</span><br><span class=\"line\"></span><br><span class=\"line\">\tUpdate(id int64, user datamodels.User) (datamodels.User, error)</span><br><span class=\"line\">\tUpdatePassword(id int64, newPassword string) (datamodels.User, error)</span><br><span class=\"line\">\tUpdateUsername(id int64, newUsername string) (datamodels.User, error)</span><br><span class=\"line\"></span><br><span class=\"line\">\tCreate(userPassword string, user datamodels.User) (datamodels.User, error)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// NewUserService returns the default user service.</span><br><span class=\"line\">func NewUserService(repo repositories.UserRepository) UserService &#123;</span><br><span class=\"line\">\treturn &amp;userService&#123;</span><br><span class=\"line\">\t\trepo: repo,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">type userService struct &#123;</span><br><span class=\"line\">\trepo repositories.UserRepository</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// GetAll returns all users.</span><br><span class=\"line\">func (s *userService) GetAll() []datamodels.User &#123;</span><br><span class=\"line\">\treturn s.repo.SelectMany(func(_ datamodels.User) bool &#123;</span><br><span class=\"line\">\t\treturn true</span><br><span class=\"line\">\t&#125;, -1)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// GetByID returns a user based on its id.</span><br><span class=\"line\">func (s *userService) GetByID(id int64) (datamodels.User, bool) &#123;</span><br><span class=\"line\">\treturn s.repo.Select(func(m datamodels.User) bool &#123;</span><br><span class=\"line\">\t\treturn m.ID == id</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// GetByUsernameAndPassword returns a user based on its username and passowrd,</span><br><span class=\"line\">// used for authentication.</span><br><span class=\"line\">func (s *userService) GetByUsernameAndPassword(username, userPassword string) (datamodels.User, bool) &#123;</span><br><span class=\"line\">\tif username == &quot;&quot; || userPassword == &quot;&quot; &#123;</span><br><span class=\"line\">\t\treturn datamodels.User&#123;&#125;, false</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn s.repo.Select(func(m datamodels.User) bool &#123;</span><br><span class=\"line\">\t\tif m.Username == username &#123;</span><br><span class=\"line\">\t\t\thashed := m.HashedPassword</span><br><span class=\"line\">\t\t\tif ok, _ := datamodels.ValidatePassword(userPassword, hashed); ok &#123;</span><br><span class=\"line\">\t\t\t\treturn true</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treturn false</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Update updates every field from an existing User,</span><br><span class=\"line\">// it&apos;s not safe to be used via public API,</span><br><span class=\"line\">// however we will use it on the web/controllers/user_controller.go#PutBy</span><br><span class=\"line\">// in order to show you how it works.</span><br><span class=\"line\">func (s *userService) Update(id int64, user datamodels.User) (datamodels.User, error) &#123;</span><br><span class=\"line\">\tuser.ID = id</span><br><span class=\"line\">\treturn s.repo.InsertOrUpdate(user)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// UpdatePassword updates a user&apos;s password.</span><br><span class=\"line\">func (s *userService) UpdatePassword(id int64, newPassword string) (datamodels.User, error) &#123;</span><br><span class=\"line\">\t// update the user and return it.</span><br><span class=\"line\">\thashed, err := datamodels.GeneratePassword(newPassword)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn datamodels.User&#123;&#125;, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn s.Update(id, datamodels.User&#123;</span><br><span class=\"line\">\t\tHashedPassword: hashed,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// UpdateUsername updates a user&apos;s username.</span><br><span class=\"line\">func (s *userService) UpdateUsername(id int64, newUsername string) (datamodels.User, error) &#123;</span><br><span class=\"line\">\treturn s.Update(id, datamodels.User&#123;</span><br><span class=\"line\">\t\tUsername: newUsername,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Create inserts a new User,</span><br><span class=\"line\">// the userPassword is the client-typed password</span><br><span class=\"line\">// it will be hashed before the insertion to our repository.</span><br><span class=\"line\">func (s *userService) Create(userPassword string, user datamodels.User) (datamodels.User, error) &#123;</span><br><span class=\"line\">\tif user.ID &gt; 0 || userPassword == &quot;&quot; || user.Firstname == &quot;&quot; || user.Username == &quot;&quot; &#123;</span><br><span class=\"line\">\t\treturn datamodels.User&#123;&#125;, errors.New(&quot;unable to create this user&quot;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\thashed, err := datamodels.GeneratePassword(userPassword)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn datamodels.User&#123;&#125;, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tuser.HashedPassword = hashed</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn s.repo.InsertOrUpdate(user)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// DeleteByID deletes a user by its id.</span><br><span class=\"line\">//</span><br><span class=\"line\">// Returns true if deleted otherwise false.</span><br><span class=\"line\">func (s *userService) DeleteByID(id int64) bool &#123;</span><br><span class=\"line\">\treturn s.repo.Delete(func(m datamodels.User) bool &#123;</span><br><span class=\"line\">\t\treturn m.ID == id</span><br><span class=\"line\">\t&#125;, 1)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>user_controller.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// file: controllers/user_controller.go</span><br><span class=\"line\"></span><br><span class=\"line\">package controllers</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/_examples/mvc/login/datamodels&quot;</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/_examples/mvc/login/services&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&quot;github.com/kataras/iris&quot;</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/mvc&quot;</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/sessions&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">// UserController is our /user controller.</span><br><span class=\"line\">// UserController is responsible to handle the following requests:</span><br><span class=\"line\">// GET  \t\t\t/user/register</span><br><span class=\"line\">// POST \t\t\t/user/register</span><br><span class=\"line\">// GET \t\t\t\t/user/login</span><br><span class=\"line\">// POST \t\t\t/user/login</span><br><span class=\"line\">// GET \t\t\t\t/user/me</span><br><span class=\"line\">// All HTTP Methods /user/logout</span><br><span class=\"line\">type UserController struct &#123;</span><br><span class=\"line\">\t// context is auto-binded by Iris on each request,</span><br><span class=\"line\">\t// remember that on each incoming request iris creates a new UserController each time,</span><br><span class=\"line\">\t// so all fields are request-scoped by-default, only dependency injection is able to set</span><br><span class=\"line\">\t// custom fields like the Service which is the same for all requests (static binding)</span><br><span class=\"line\">\t// and the Session which depends on the current context (dynamic binding).</span><br><span class=\"line\">\tCtx iris.Context</span><br><span class=\"line\"></span><br><span class=\"line\">\t// Our UserService, it&apos;s an interface which</span><br><span class=\"line\">\t// is binded from the main application.</span><br><span class=\"line\">\tService services.UserService</span><br><span class=\"line\"></span><br><span class=\"line\">\t// Session, binded using dependency injection from the main.go.</span><br><span class=\"line\">\tSession *sessions.Session</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">const userIDKey = &quot;UserID&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">func (c *UserController) getCurrentUserID() int64 &#123;</span><br><span class=\"line\">\tuserID := c.Session.GetInt64Default(userIDKey, 0)</span><br><span class=\"line\">\treturn userID</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (c *UserController) isLoggedIn() bool &#123;</span><br><span class=\"line\">\treturn c.getCurrentUserID() &gt; 0</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (c *UserController) logout() &#123;</span><br><span class=\"line\">\tc.Session.Destroy()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var registerStaticView = mvc.View&#123;</span><br><span class=\"line\">\tName: &quot;user/register.html&quot;,</span><br><span class=\"line\">\tData: iris.Map&#123;&quot;Title&quot;: &quot;User Registration&quot;&#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// GetRegister handles GET: http://localhost:8080/user/register.</span><br><span class=\"line\">func (c *UserController) GetRegister() mvc.Result &#123;</span><br><span class=\"line\">\tif c.isLoggedIn() &#123;</span><br><span class=\"line\">\t\tc.logout()</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn registerStaticView</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// PostRegister handles POST: http://localhost:8080/user/register.</span><br><span class=\"line\">func (c *UserController) PostRegister() mvc.Result &#123;</span><br><span class=\"line\">\t// get firstname, username and password from the form.</span><br><span class=\"line\">\tvar (</span><br><span class=\"line\">\t\tfirstname = c.Ctx.FormValue(&quot;firstname&quot;)</span><br><span class=\"line\">\t\tusername  = c.Ctx.FormValue(&quot;username&quot;)</span><br><span class=\"line\">\t\tpassword  = c.Ctx.FormValue(&quot;password&quot;)</span><br><span class=\"line\">\t)</span><br><span class=\"line\"></span><br><span class=\"line\">\t// create the new user, the password will be hashed by the service.</span><br><span class=\"line\">\tu, err := c.Service.Create(password, datamodels.User&#123;</span><br><span class=\"line\">\t\tUsername:  username,</span><br><span class=\"line\">\t\tFirstname: firstname,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t// set the user&apos;s id to this session even if err != nil,</span><br><span class=\"line\">\t// the zero id doesn&apos;t matters because .getCurrentUserID() checks for that.</span><br><span class=\"line\">\t// If err != nil then it will be shown, see below on mvc.Response.Err: err.</span><br><span class=\"line\">\tc.Session.Set(userIDKey, u.ID)</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn mvc.Response&#123;</span><br><span class=\"line\">\t\t// if not nil then this error will be shown instead.</span><br><span class=\"line\">\t\tErr: err,</span><br><span class=\"line\">\t\t// redirect to /user/me.</span><br><span class=\"line\">\t\tPath: &quot;/user/me&quot;,</span><br><span class=\"line\">\t\t// When redirecting from POST to GET request you -should- use this HTTP status code,</span><br><span class=\"line\">\t\t// however there&apos;re some (complicated) alternatives if you</span><br><span class=\"line\">\t\t// search online or even the HTTP RFC.</span><br><span class=\"line\">\t\t// Status &quot;See Other&quot; RFC 7231, however iris can automatically fix that</span><br><span class=\"line\">\t\t// but it&apos;s good to know you can set a custom code;</span><br><span class=\"line\">\t\t// Code: 303,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var loginStaticView = mvc.View&#123;</span><br><span class=\"line\">\tName: &quot;user/login.html&quot;,</span><br><span class=\"line\">\tData: iris.Map&#123;&quot;Title&quot;: &quot;User Login&quot;&#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// GetLogin handles GET: http://localhost:8080/user/login.</span><br><span class=\"line\">func (c *UserController) GetLogin() mvc.Result &#123;</span><br><span class=\"line\">\tif c.isLoggedIn() &#123;</span><br><span class=\"line\">\t\t// if it&apos;s already logged in then destroy the previous session.</span><br><span class=\"line\">\t\tc.logout()</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn loginStaticView</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// PostLogin handles POST: http://localhost:8080/user/register.</span><br><span class=\"line\">func (c *UserController) PostLogin() mvc.Result &#123;</span><br><span class=\"line\">\tvar (</span><br><span class=\"line\">\t\tusername = c.Ctx.FormValue(&quot;username&quot;)</span><br><span class=\"line\">\t\tpassword = c.Ctx.FormValue(&quot;password&quot;)</span><br><span class=\"line\">\t)</span><br><span class=\"line\"></span><br><span class=\"line\">\tu, found := c.Service.GetByUsernameAndPassword(username, password)</span><br><span class=\"line\"></span><br><span class=\"line\">\tif !found &#123;</span><br><span class=\"line\">\t\treturn mvc.Response&#123;</span><br><span class=\"line\">\t\t\tPath: &quot;/user/register&quot;,</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tc.Session.Set(userIDKey, u.ID)</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn mvc.Response&#123;</span><br><span class=\"line\">\t\tPath: &quot;/user/me&quot;,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// GetMe handles GET: http://localhost:8080/user/me.</span><br><span class=\"line\">func (c *UserController) GetMe() mvc.Result &#123;</span><br><span class=\"line\">\tif !c.isLoggedIn() &#123;</span><br><span class=\"line\">\t\t// if it&apos;s not logged in then redirect user to the login page.</span><br><span class=\"line\">\t\treturn mvc.Response&#123;Path: &quot;/user/login&quot;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tu, found := c.Service.GetByID(c.getCurrentUserID())</span><br><span class=\"line\">\tif !found &#123;</span><br><span class=\"line\">\t\t// if the  session exists but for some reason the user doesn&apos;t exist in the &quot;database&quot;</span><br><span class=\"line\">\t\t// then logout and re-execute the function, it will redirect the client to the</span><br><span class=\"line\">\t\t// /user/login page.</span><br><span class=\"line\">\t\tc.logout()</span><br><span class=\"line\">\t\treturn c.GetMe()</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn mvc.View&#123;</span><br><span class=\"line\">\t\tName: &quot;user/me.html&quot;,</span><br><span class=\"line\">\t\tData: iris.Map&#123;</span><br><span class=\"line\">\t\t\t&quot;Title&quot;: &quot;Profile of &quot; + u.Username,</span><br><span class=\"line\">\t\t\t&quot;User&quot;:  u,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// AnyLogout handles All/Any HTTP Methods for: http://localhost:8080/user/logout.</span><br><span class=\"line\">func (c *UserController) AnyLogout() &#123;</span><br><span class=\"line\">\tif c.isLoggedIn() &#123;</span><br><span class=\"line\">\t\tc.logout()</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tc.Ctx.Redirect(&quot;/user/login&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>users_controller.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package controllers</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/_examples/mvc/login/datamodels&quot;</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/_examples/mvc/login/services&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&quot;github.com/kataras/iris&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">// UsersController is our /users API controller.</span><br><span class=\"line\">// GET\t\t\t\t/users  | get all</span><br><span class=\"line\">// GET\t\t\t\t/users/&#123;id:long&#125; | get by id</span><br><span class=\"line\">// PUT\t\t\t\t/users/&#123;id:long&#125; | update by id</span><br><span class=\"line\">// DELETE\t\t\t/users/&#123;id:long&#125; | delete by id</span><br><span class=\"line\">// Requires basic authentication.</span><br><span class=\"line\">type UsersController struct &#123;</span><br><span class=\"line\">\t// Optionally: context is auto-binded by Iris on each request,</span><br><span class=\"line\">\t// remember that on each incoming request iris creates a new UserController each time,</span><br><span class=\"line\">\t// so all fields are request-scoped by-default, only dependency injection is able to set</span><br><span class=\"line\">\t// custom fields like the Service which is the same for all requests (static binding).</span><br><span class=\"line\">\tCtx iris.Context</span><br><span class=\"line\"></span><br><span class=\"line\">\t// Our UserService, it&apos;s an interface which</span><br><span class=\"line\">\t// is binded from the main application.</span><br><span class=\"line\">\tService services.UserService</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Get returns list of the users.</span><br><span class=\"line\">// Demo:</span><br><span class=\"line\">// curl -i -u admin:password http://localhost:8080/users</span><br><span class=\"line\">//</span><br><span class=\"line\">// The correct way if you have sensitive data:</span><br><span class=\"line\">// func (c *UsersController) Get() (results []viewmodels.User) &#123;</span><br><span class=\"line\">// \tdata := c.Service.GetAll()</span><br><span class=\"line\">//</span><br><span class=\"line\">// \tfor _, user := range data &#123;</span><br><span class=\"line\">// \t\tresults = append(results, viewmodels.User&#123;user&#125;)</span><br><span class=\"line\">// \t&#125;</span><br><span class=\"line\">// \treturn</span><br><span class=\"line\">// &#125;</span><br><span class=\"line\">// otherwise just return the datamodels.</span><br><span class=\"line\">func (c *UsersController) Get() (results []datamodels.User) &#123;</span><br><span class=\"line\">\treturn c.Service.GetAll()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// GetBy returns a user.</span><br><span class=\"line\">// Demo:</span><br><span class=\"line\">// curl -i -u admin:password http://localhost:8080/users/1</span><br><span class=\"line\">func (c *UsersController) GetBy(id int64) (user datamodels.User, found bool) &#123;</span><br><span class=\"line\">\tu, found := c.Service.GetByID(id)</span><br><span class=\"line\">\tif !found &#123;</span><br><span class=\"line\">\t\t// this message will be binded to the</span><br><span class=\"line\">\t\t// main.go -&gt; app.OnAnyErrorCode -&gt; NotFound -&gt; shared/error.html -&gt; .Message text.</span><br><span class=\"line\">\t\tc.Ctx.Values().Set(&quot;message&quot;, &quot;User couldn&apos;t be found!&quot;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn u, found // it will throw/emit 404 if found == false.</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// PutBy updates a user.</span><br><span class=\"line\">// Demo:</span><br><span class=\"line\">// curl -i -X PUT -u admin:password -F &quot;username=kataras&quot;</span><br><span class=\"line\">// -F &quot;password=rawPasswordIsNotSafeIfOrNotHTTPs_You_Should_Use_A_client_side_lib_for_hash_as_well&quot;</span><br><span class=\"line\">// http://localhost:8080/users/1</span><br><span class=\"line\">func (c *UsersController) PutBy(id int64) (datamodels.User, error) &#123;</span><br><span class=\"line\">\t// username := c.Ctx.FormValue(&quot;username&quot;)</span><br><span class=\"line\">\t// password := c.Ctx.FormValue(&quot;password&quot;)</span><br><span class=\"line\">\tu := datamodels.User&#123;&#125;</span><br><span class=\"line\">\tif err := c.Ctx.ReadForm(&amp;u); err != nil &#123;</span><br><span class=\"line\">\t\treturn u, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn c.Service.Update(id, u)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// DeleteBy deletes a user.</span><br><span class=\"line\">// Demo:</span><br><span class=\"line\">// curl -i -X DELETE -u admin:password http://localhost:8080/users/1</span><br><span class=\"line\">func (c *UsersController) DeleteBy(id int64) interface&#123;&#125; &#123;</span><br><span class=\"line\">\twasDel := c.Service.DeleteByID(id)</span><br><span class=\"line\">\tif wasDel &#123;</span><br><span class=\"line\">\t\t// return the deleted user&apos;s ID</span><br><span class=\"line\">\t\treturn map[string]interface&#123;&#125;&#123;&quot;deleted&quot;: id&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t// right here we can see that a method function</span><br><span class=\"line\">\t// can return any of those two types(map or int),</span><br><span class=\"line\">\t// we don&apos;t have to specify the return type to a specific type.</span><br><span class=\"line\">\treturn iris.StatusBadRequest // same as 400.</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>basicauth.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package middleware</span><br><span class=\"line\"></span><br><span class=\"line\">import &quot;github.com/kataras/iris/middleware/basicauth&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">// BasicAuth middleware sample.</span><br><span class=\"line\">var BasicAuth = basicauth.New(basicauth.Config&#123;</span><br><span class=\"line\">\tUsers: map[string]string&#123;</span><br><span class=\"line\">\t\t&quot;admin&quot;: &quot;password&quot;,</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>error.html<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h1&gt;Error.&lt;/h1&gt;</span><br><span class=\"line\">&lt;h2&gt;An error occurred while processing your request.&lt;/h2&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;h3&gt;&#123;&#123;.Message&#125;&#125;&lt;/h3&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;footer&gt;</span><br><span class=\"line\">    &lt;h2&gt;Sitemap&lt;/h2&gt;</span><br><span class=\"line\">    &lt;a href=&quot;http://localhost:8080/user/register&quot;&gt;/user/register&lt;/a&gt;&lt;br/&gt;</span><br><span class=\"line\">    &lt;a href=&quot;http://localhost:8080/user/login&quot;&gt;/user/login&lt;/a&gt;&lt;br/&gt;</span><br><span class=\"line\">    &lt;a href=&quot;http://localhost:8080/user/logout&quot;&gt;/user/logout&lt;/a&gt;&lt;br/&gt;</span><br><span class=\"line\">    &lt;a href=&quot;http://localhost:8080/user/me&quot;&gt;/user/me&lt;/a&gt;&lt;br/&gt;</span><br><span class=\"line\">    &lt;h3&gt;requires authentication&lt;/h3&gt;&lt;br/&gt;</span><br><span class=\"line\">    &lt;a href=&quot;http://localhost:8080/users&quot;&gt;/users&lt;/a&gt;&lt;br/&gt;</span><br><span class=\"line\">    &lt;a href=&quot;http://localhost:8080/users/1&quot;&gt;/users/&#123;id&#125;&lt;/a&gt;&lt;br/&gt;</span><br><span class=\"line\">&lt;/footer&gt;</span><br></pre></td></tr></table></figure></p>\n<p>layout.html<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;&#123;&#123;.Title&#125;&#125;&lt;/title&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/public/css/site.css&quot; /&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &#123;&#123; yield &#125;&#125;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<p>layout.html<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;form action=&quot;/user/login&quot; method=&quot;POST&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">        &lt;label&gt;&lt;b&gt;Username&lt;/b&gt;&lt;/label&gt;</span><br><span class=\"line\">        &lt;input type=&quot;text&quot; placeholder=&quot;Enter Username&quot; name=&quot;username&quot; required&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;label&gt;&lt;b&gt;Password&lt;/b&gt;&lt;/label&gt;</span><br><span class=\"line\">        &lt;input type=&quot;password&quot; placeholder=&quot;Enter Password&quot; name=&quot;password&quot; required&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;button type=&quot;submit&quot;&gt;Login&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>\n<p>me.html<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;</span><br><span class=\"line\">    Welcome back &lt;strong&gt;&#123;&#123;.User.Firstname&#125;&#125;&lt;/strong&gt;!</span><br><span class=\"line\">&lt;/p&gt;</span><br></pre></td></tr></table></figure></p>\n<p>register.html<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;form action=&quot;/user/register&quot; method=&quot;POST&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">        &lt;label&gt;&lt;b&gt;Firstname&lt;/b&gt;&lt;/label&gt;</span><br><span class=\"line\">        &lt;input type=&quot;text&quot; placeholder=&quot;Enter Firstname&quot; name=&quot;firstname&quot; required&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;label&gt;&lt;b&gt;Username&lt;/b&gt;&lt;/label&gt;</span><br><span class=\"line\">        &lt;input type=&quot;text&quot; placeholder=&quot;Enter Username&quot; name=&quot;username&quot; required&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;label&gt;&lt;b&gt;Password&lt;/b&gt;&lt;/label&gt;</span><br><span class=\"line\">        &lt;input type=&quot;password&quot; placeholder=&quot;Enter Password&quot; name=&quot;password&quot; required&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;button type=&quot;submit&quot;&gt;Register&lt;/button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>\n<p>main.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;time&quot;</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/_examples/mvc/login/datasource&quot;</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/_examples/mvc/login/repositories&quot;</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/_examples/mvc/login/services&quot;</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/_examples/mvc/login/web/controllers&quot;</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/_examples/mvc/login/web/middleware&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&quot;github.com/kataras/iris&quot;</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/mvc&quot;</span><br><span class=\"line\">\t&quot;github.com/kataras/iris/sessions&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tapp := iris.New()</span><br><span class=\"line\">\t// You got full debug messages, useful when using MVC and you want to make</span><br><span class=\"line\">\t// sure that your code is aligned with the Iris&apos; MVC Architecture.</span><br><span class=\"line\">\tapp.Logger().SetLevel(&quot;debug&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t// Load the template files.</span><br><span class=\"line\">\ttmpl := iris.HTML(&quot;./web/views&quot;, &quot;.html&quot;).</span><br><span class=\"line\">\t\tLayout(&quot;shared/layout.html&quot;).</span><br><span class=\"line\">\t\tReload(true)</span><br><span class=\"line\">\tapp.RegisterView(tmpl)</span><br><span class=\"line\">\tapp.OnAnyErrorCode(func(ctx iris.Context) &#123;</span><br><span class=\"line\">\t\tctx.ViewData(&quot;Message&quot;, ctx.Values().</span><br><span class=\"line\">\t\t\tGetStringDefault(&quot;message&quot;, &quot;The page you&apos;re looking for doesn&apos;t exist&quot;))</span><br><span class=\"line\">\t\tctx.View(&quot;shared/error.html&quot;)</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t// ---- Serve our controllers. ----</span><br><span class=\"line\"></span><br><span class=\"line\">\t// Prepare our repositories and services.</span><br><span class=\"line\">\tdb, err := datasource.LoadUsers(datasource.Memory)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\tapp.Logger().Fatalf(&quot;error while loading the users: %v&quot;, err)</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\trepo := repositories.NewUserRepository(db)</span><br><span class=\"line\">\tuserService := services.NewUserService(repo)</span><br><span class=\"line\"></span><br><span class=\"line\">\t// &quot;/users&quot; based mvc application.</span><br><span class=\"line\">\tusers := mvc.New(app.Party(&quot;/users&quot;))</span><br><span class=\"line\">\t// Add the basic authentication(admin:password) middleware</span><br><span class=\"line\">\t// for the /users based requests.</span><br><span class=\"line\">\tusers.Router.Use(middleware.BasicAuth)</span><br><span class=\"line\">\t// Bind the &quot;userService&quot; to the UserController&apos;s Service (interface) field.</span><br><span class=\"line\">\tusers.Register(userService)</span><br><span class=\"line\">\tusers.Handle(new(controllers.UsersController))</span><br><span class=\"line\"></span><br><span class=\"line\">\t// &quot;/user&quot; based mvc application.</span><br><span class=\"line\">\tsessManager := sessions.New(sessions.Config&#123;</span><br><span class=\"line\">\t\tCookie:  &quot;sessioncookiename&quot;,</span><br><span class=\"line\">\t\tExpires: 24 * time.Hour,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">\tuser := mvc.New(app.Party(&quot;/user&quot;))</span><br><span class=\"line\">\tuser.Register(</span><br><span class=\"line\">\t\tuserService,</span><br><span class=\"line\">\t\tsessManager.Start,</span><br><span class=\"line\">\t)</span><br><span class=\"line\">\tuser.Handle(new(controllers.UserController))</span><br><span class=\"line\"></span><br><span class=\"line\">\t// http://localhost:8080/noexist</span><br><span class=\"line\">\t// and all controller&apos;s methods like</span><br><span class=\"line\">\t// http://localhost:8080/users/1</span><br><span class=\"line\">\t// http://localhost:8080/user/register</span><br><span class=\"line\">\t// http://localhost:8080/user/login</span><br><span class=\"line\">\t// http://localhost:8080/user/me</span><br><span class=\"line\">\t// http://localhost:8080/user/logout</span><br><span class=\"line\">\t// basic auth: &quot;admin&quot;, &quot;password&quot;, see &quot;./middleware/basicauth.go&quot; source file.</span><br><span class=\"line\">\tapp.Run(</span><br><span class=\"line\">\t\t// Starts the web server at localhost:8080</span><br><span class=\"line\">\t\tiris.Addr(&quot;localhost:8080&quot;),</span><br><span class=\"line\">\t\t// Ignores err server closed log when CTRL/CMD+C pressed.</span><br><span class=\"line\">\t\tiris.WithoutServerError(iris.ErrServerClosed),</span><br><span class=\"line\">\t\t// Enables faster json serialization and more.</span><br><span class=\"line\">\t\tiris.WithOptimizations,</span><br><span class=\"line\">\t)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","next":{"title":"GO语言新手可能会踩的50个坑（四）","slug":"GO语言新手可能会踩的50个坑（四）"},"link":"http://yoursite.com/post/Iris框架MVC例子/"}