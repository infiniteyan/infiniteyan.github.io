{"title":"Algorithm Problem : 计算符号组合","date":"2019-03-07T15:14:17.000Z","slug":"Algorithm-Problem-计算符号组合","comments":true,"updated":"2019-03-07T15:21:59.212Z","content":"<h3 id=\"问题描述\">问题描述<a href=\"post/Algorithm-Problem-计算符号组合#问题描述\"></a></h3><p>给定一个包含数字的数组array，以及一个整数v，只能通过+和-号对数组中的元素进行连接。输出所有可能的组合方法，使得最后的计算结果为v。</p>\n<h3 id=\"解决方法\">解决方法<a href=\"post/Algorithm-Problem-计算符号组合#解决方法\"></a></h3><p>通过DFS进行遍历求取即可。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#include &lt;vector&gt;</span><br><span class=\"line\">#include &lt;string&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">void calCombination(std::vector&lt;int&gt; arrays, int index, std::string&amp; str, int value, int&amp; currentValue) &#123;</span><br><span class=\"line\">    if (arrays.size() == 0) &#123;</span><br><span class=\"line\">        return;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (index == 0) &#123;</span><br><span class=\"line\">        currentValue += arrays[0];</span><br><span class=\"line\">        calCombination(arrays, index + 1, str, value, currentValue);</span><br><span class=\"line\">    &#125; else if (index &gt;= arrays.size()) &#123;</span><br><span class=\"line\">        if (currentValue == value) &#123;</span><br><span class=\"line\">            std::cout &lt;&lt; &quot;Possible Result : &quot; &lt;&lt; str &lt;&lt; std::endl;</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        int plusValue = currentValue + arrays[index];</span><br><span class=\"line\">        std::string ret1 = str + &quot;+&quot;;</span><br><span class=\"line\">        calCombination(arrays, index + 1, ret1, value, plusValue);</span><br><span class=\"line\">        int minusValue = currentValue - arrays[index];</span><br><span class=\"line\">        std::string ret2 = str + &quot;-&quot;;</span><br><span class=\"line\">        calCombination(arrays, index + 1, ret2, value, minusValue);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">    std::vector&lt;int&gt; arrays;</span><br><span class=\"line\">    arrays.push_back(3);</span><br><span class=\"line\">    arrays.push_back(4);</span><br><span class=\"line\">    arrays.push_back(5);</span><br><span class=\"line\">    arrays.push_back(7);</span><br><span class=\"line\">    arrays.push_back(8);</span><br><span class=\"line\">    arrays.push_back(2);</span><br><span class=\"line\">    int target = 11;</span><br><span class=\"line\">    int currentValue = 0;</span><br><span class=\"line\">    std::string ret;</span><br><span class=\"line\">    calCombination(arrays, 0, ret, target, currentValue);</span><br><span class=\"line\"></span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Possible Result : ++-+-</span><br><span class=\"line\">Possible Result : --+++</span><br></pre></td></tr></table></figure></p>\n","next":{"title":"Algorithm Problem : Convert Binary Tree to Doubly Linked List","slug":"Algorithm-Problem-Convert-Binary-Tree-to-Doubly-Linked-List"},"link":"http://yoursite.com/post/Algorithm-Problem-计算符号组合/"}