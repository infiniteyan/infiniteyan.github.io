{"title":"Algorithm-Problem-电话号码的字母组合","date":"2020-02-29T08:02:11.000Z","slug":"Algorithm-Problem-电话号码的字母组合","comments":true,"updated":"2020-02-29T08:04:17.381Z","content":"<h3 id=\"问题描述\">问题描述<a href=\"post/Algorithm-Problem-电话号码的字母组合#问题描述\"></a></h3><p>给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。<br>给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。</p>\n<h3 id=\"解决方法\">解决方法<a href=\"post/Algorithm-Problem-电话号码的字母组合#解决方法\"></a></h3><p>dfs + 回溯</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">var dic = <span class=\"built_in\">map</span>[<span class=\"built_in\">string</span>]<span class=\"built_in\">string</span>&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"2\"</span>: <span class=\"string\">\"abc\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"3\"</span>: <span class=\"string\">\"def\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"4\"</span>: <span class=\"string\">\"ghi\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"5\"</span>: <span class=\"string\">\"jkl\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"6\"</span>: <span class=\"string\">\"mno\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"7\"</span>: <span class=\"string\">\"pqrs\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"8\"</span>: <span class=\"string\">\"tuv\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"9\"</span>: <span class=\"string\">\"wxyz\"</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func dfs(digits <span class=\"built_in\">string</span>, startIndex <span class=\"keyword\">int</span>, length <span class=\"keyword\">int</span>, base <span class=\"built_in\">string</span>, result *[]<span class=\"built_in\">string</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> startIndex &gt;= length &#123;</span><br><span class=\"line\">\t\t*result = append(*result, base)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdigit := <span class=\"built_in\">string</span>(digits[startIndex])</span><br><span class=\"line\">\trepStr := dic[digit]</span><br><span class=\"line\"></span><br><span class=\"line\">\trepLen := len(repStr)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; repLen; i++ &#123;</span><br><span class=\"line\">\t\tbase += <span class=\"built_in\">string</span>(repStr[i])</span><br><span class=\"line\">\t\tdfs(digits, startIndex + <span class=\"number\">1</span>, length, base, result)</span><br><span class=\"line\">\t\tbase = base[<span class=\"number\">0</span> : len(base) - <span class=\"number\">1</span>]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func letterCombinations(digits <span class=\"built_in\">string</span>) []<span class=\"built_in\">string</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> len(digits) == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> nil</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar baseStr <span class=\"built_in\">string</span></span><br><span class=\"line\">\tvar result []<span class=\"built_in\">string</span></span><br><span class=\"line\">\tdfs(digits, <span class=\"number\">0</span>, len(digits), baseStr, &amp;result)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tret := letterCombinations(<span class=\"string\">\"2346\"</span>)</span><br><span class=\"line\">\tfmt.Println(ret)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"Algorithm-Problem-为运算表达式设计优先级","slug":"Algorithm-Problem-为运算表达式设计优先级"},"next":{"title":"Algorithm-Problem-根据身高重建队列","slug":"Algorithm-Problem-根据身高重建队列"},"link":"http://yoursite.com/post/Algorithm-Problem-电话号码的字母组合/"}