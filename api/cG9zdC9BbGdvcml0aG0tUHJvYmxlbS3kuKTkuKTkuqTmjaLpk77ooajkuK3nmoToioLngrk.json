{"title":"Algorithm-Problem-两两交换链表中的节点","date":"2020-03-16T12:32:39.000Z","slug":"Algorithm-Problem-两两交换链表中的节点","comments":true,"updated":"2020-03-16T12:36:26.774Z","content":"<h3 id=\"问题描述\">问题描述<a href=\"post/Algorithm-Problem-两两交换链表中的节点#问题描述\"></a></h3><p>给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。<br>你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。</p>\n<p>示例：<br>给定 1-&gt;2-&gt;3-&gt;4, 你应该返回 2-&gt;1-&gt;4-&gt;3.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import &quot;fmt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">type ListNode struct &#123;</span><br><span class=\"line\">\tnext \t*ListNode</span><br><span class=\"line\">\tval\t\tint</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func swapPairs(head *ListNode) *ListNode &#123;</span><br><span class=\"line\">\tif head == nil &#123;</span><br><span class=\"line\">\t\treturn nil</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar length int</span><br><span class=\"line\">\tptr := head</span><br><span class=\"line\">\tfor ptr != nil &#123;</span><br><span class=\"line\">\t\tlength++</span><br><span class=\"line\">\t\tptr = ptr.next</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif length &lt; 2 &#123;</span><br><span class=\"line\">\t\treturn head</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tvar newHead *ListNode = nil</span><br><span class=\"line\"></span><br><span class=\"line\">\tptr = head</span><br><span class=\"line\">\tvar currentLen  = 0</span><br><span class=\"line\">\tvar nextHead *ListNode = nil</span><br><span class=\"line\">\tvar prev *ListNode = nil</span><br><span class=\"line\">\tfor currentLen + 2 &lt;= length &amp;&amp; ptr != nil &#123;</span><br><span class=\"line\">\t\tnextHead = ptr.next.next</span><br><span class=\"line\">\t\tsecPtr := ptr.next</span><br><span class=\"line\">\t\tsecPtr.next = ptr</span><br><span class=\"line\">\t\tptr.next = nextHead</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif newHead == nil &#123;</span><br><span class=\"line\">\t\t\tnewHead = secPtr</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tif prev != nil &#123;</span><br><span class=\"line\">\t\t\tprev.next = secPtr</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tprev = ptr</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tptr = nextHead</span><br><span class=\"line\">\t\tcurrentLen += 2</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn newHead</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tfirst := ListNode&#123;next:nil, val: 1&#125;</span><br><span class=\"line\">\tsec := ListNode&#123;next:nil, val: 2&#125;</span><br><span class=\"line\">\tthir := ListNode&#123;next:nil, val: 3&#125;</span><br><span class=\"line\">\tforth := ListNode&#123;next:nil, val: 4&#125;</span><br><span class=\"line\">\tfirst.next = &amp;sec</span><br><span class=\"line\">\tsec.next = &amp;thir</span><br><span class=\"line\">\tthir.next = &amp;forth</span><br><span class=\"line\"></span><br><span class=\"line\">\tnewList := swapPairs(&amp;first)</span><br><span class=\"line\">\tptr := newList</span><br><span class=\"line\">\tfor ptr != nil &#123;</span><br><span class=\"line\">\t\tfmt.Printf(&quot;%d  &quot;, ptr.val)</span><br><span class=\"line\">\t\tptr = ptr.next</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","next":{"title":"Algorithm-Problem-按递增顺序显示卡牌","slug":"Algorithm-Problem-按递增顺序显示卡牌"},"link":"http://yoursite.com/post/Algorithm-Problem-两两交换链表中的节点/"}