{"title":"GO语言实现双链表","date":"2019-03-23T14:12:21.000Z","slug":"GO语言实现双链表","comments":true,"updated":"2019-03-23T14:13:01.550Z","content":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"sync\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">type ListNode <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">\tdata interface&#123;&#125;</span><br><span class=\"line\">\tprev *ListNode</span><br><span class=\"line\">\tnext *ListNode</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">type DoubleList <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">\tmutex *sync.RWMutex</span><br><span class=\"line\">\tsize  uint</span><br><span class=\"line\">\thead  *ListNode</span><br><span class=\"line\">\ttail  *ListNode</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (<span class=\"built_in\">list</span> *DoubleList) Init() &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.size = <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.head = nil</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.tail = nil</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.mutex = <span class=\"keyword\">new</span>(sync.RWMutex)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (<span class=\"built_in\">list</span> *DoubleList) Append(value interface&#123;&#125;) <span class=\"keyword\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.mutex.Lock()</span><br><span class=\"line\">\tdefer <span class=\"built_in\">list</span>.mutex.Unlock()</span><br><span class=\"line\">\tnode := &amp;ListNode&#123;value, nil, nil&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"built_in\">list</span>.size == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>.head = node</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>.tail = node</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>.tail.next = node</span><br><span class=\"line\">\t\tnode.prev = <span class=\"built_in\">list</span>.tail</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>.tail = node</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.size++</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (<span class=\"built_in\">list</span> *DoubleList) Insert(index uint, value interface&#123;&#125;) <span class=\"keyword\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.mutex.Lock()</span><br><span class=\"line\">\tdefer <span class=\"built_in\">list</span>.mutex.Unlock()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> index &gt; <span class=\"built_in\">list</span>.size+<span class=\"number\">1</span> || index &lt;= <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> index == <span class=\"built_in\">list</span>.size+<span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"built_in\">list</span>.Append(value)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> index == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\tnode := &amp;ListNode&#123;value, nil, nil&#125;</span><br><span class=\"line\">\t\tnode.next = <span class=\"built_in\">list</span>.head</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>.head.prev = node</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>.head = node</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>.size++</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar target *ListNode</span><br><span class=\"line\">\ttarget = <span class=\"built_in\">list</span>.head</span><br><span class=\"line\">\tvar counter uint</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> target != nil &#123;</span><br><span class=\"line\">\t\tcounter++</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> counter == index &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ttarget = target.next</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tnode := &amp;ListNode&#123;value, nil, nil&#125;</span><br><span class=\"line\">\tnode.next = target</span><br><span class=\"line\">\tnode.prev = target.prev</span><br><span class=\"line\">\ttarget.prev.next = node</span><br><span class=\"line\">\ttarget.prev = node</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.size++</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (<span class=\"built_in\">list</span> *DoubleList) DeleteAt(index uint) <span class=\"keyword\">bool</span> &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.mutex.Lock()</span><br><span class=\"line\">\tdefer <span class=\"built_in\">list</span>.mutex.Unlock()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"built_in\">list</span>.size == <span class=\"number\">0</span> || index &lt;= <span class=\"number\">0</span> || index &gt; <span class=\"built_in\">list</span>.size &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> index == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> <span class=\"built_in\">list</span>.size == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">list</span>.head = nil</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">list</span>.tail = nil</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">list</span>.size--</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">list</span>.head.next.prev = nil</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">list</span>.head = <span class=\"built_in\">list</span>.head.next</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">list</span>.size--</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> index == <span class=\"built_in\">list</span>.size &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>.tail.prev.next = nil</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>.tail = <span class=\"built_in\">list</span>.tail.prev</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>.size--</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar target *ListNode</span><br><span class=\"line\">\ttarget = <span class=\"built_in\">list</span>.head</span><br><span class=\"line\">\tvar counter uint</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> target != nil &#123;</span><br><span class=\"line\">\t\tcounter++</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> counter == index &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ttarget = target.next</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ttarget.prev.next = target.next</span><br><span class=\"line\">\ttarget.next.prev = target.prev</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.size--</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (<span class=\"built_in\">list</span> *DoubleList) GetElement(index uint) interface&#123;&#125; &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.mutex.RLock()</span><br><span class=\"line\">\tdefer <span class=\"built_in\">list</span>.mutex.RUnlock()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"built_in\">list</span>.size == <span class=\"number\">0</span> || index &gt; <span class=\"built_in\">list</span>.size &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> nil</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar ret interface&#123;&#125;</span><br><span class=\"line\">\tvar counter uint</span><br><span class=\"line\">\tcounter = <span class=\"number\">0</span></span><br><span class=\"line\">\tptr := <span class=\"built_in\">list</span>.head</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> ptr != nil &#123;</span><br><span class=\"line\">\t\tcounter++</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> counter == index &#123;</span><br><span class=\"line\">\t\t\tret = ptr.data</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tptr = ptr.next</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (<span class=\"built_in\">list</span> *DoubleList) PrintSelf() &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.mutex.RLock()</span><br><span class=\"line\">\tdefer <span class=\"built_in\">list</span>.mutex.RUnlock()</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"%d elements in double list:\"</span>, <span class=\"built_in\">list</span>.size)</span><br><span class=\"line\">\tvar ptr *ListNode</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> ptr = <span class=\"built_in\">list</span>.head; ptr != nil; ptr = ptr.next &#123;</span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">\"%d  \"</span>, ptr.data)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tvar <span class=\"built_in\">list</span> = DoubleList&#123;&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.Init()</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.Append(<span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.Append(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.Append(<span class=\"number\">2</span>)</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.Append(<span class=\"number\">3</span>)</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.PrintSelf()</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">\"The %dth element is %d\\n\"</span>, <span class=\"number\">3</span>, <span class=\"built_in\">list</span>.GetElement(<span class=\"number\">3</span>))</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.Insert(<span class=\"number\">3</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.PrintSelf()</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.DeleteAt(<span class=\"number\">2</span>)</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>.PrintSelf()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"GO并发：WaitGroup","slug":"GO并发：WaitGroup"},"next":{"title":"Algorithm Problem : Lowest Common Ancester","slug":"Algorithm-Problem-Lowest-Common-Ancester"},"link":"http://yoursite.com/post/GO语言实现双链表/"}