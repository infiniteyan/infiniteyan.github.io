{"title":"基于etcd实现分布式锁","date":"2019-10-06T13:44:20.000Z","slug":"基于etcd实现分布式锁","comments":true,"updated":"2019-10-06T13:45:45.884Z","content":"<h4 id=\"基于etcd实现分布式锁\">基于etcd实现分布式锁<a href=\"post/基于etcd实现分布式锁#基于etcd实现分布式锁\"></a></h4><p>main.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;context&quot;</span><br><span class=\"line\">\t&quot;fmt&quot;</span><br><span class=\"line\">\t&quot;go.etcd.io/etcd/clientv3&quot;</span><br><span class=\"line\">\t&quot;time&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tvar (</span><br><span class=\"line\">\t\tetcdConfig clientv3.Config</span><br><span class=\"line\">\t\tclient *clientv3.Client</span><br><span class=\"line\">\t\terr error</span><br><span class=\"line\">\t\tkv clientv3.KV</span><br><span class=\"line\">\t\tlease clientv3.Lease</span><br><span class=\"line\">\t\tleaseGrandResp *clientv3.LeaseGrantResponse</span><br><span class=\"line\">\t\tleaseKeepAliveResp &lt;-chan *clientv3.LeaseKeepAliveResponse</span><br><span class=\"line\">\t)</span><br><span class=\"line\"></span><br><span class=\"line\">\tetcdConfig = clientv3.Config&#123;Endpoints:[]string&#123;&quot;127.0.0.1:2379&quot;&#125;, DialTimeout:5 * time.Second&#125;</span><br><span class=\"line\">\tclient, err = clientv3.New(etcdConfig)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\tfmt.Println(&quot;fail to connect etcd:&quot;, err.Error())</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlease = clientv3.NewLease(client)</span><br><span class=\"line\">\tleaseGrandResp, err = lease.Grant(context.TODO(), 5)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\tfmt.Println(&quot;fail to grant lease:&quot;, err.Error())</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx, cancelFunc := context.WithCancel(context.TODO())</span><br><span class=\"line\">\tleaseKeepAliveResp, err = lease.KeepAlive(ctx, leaseGrandResp.ID)</span><br><span class=\"line\">\tgo func(channel &lt;-chan *clientv3.LeaseKeepAliveResponse) &#123;</span><br><span class=\"line\">\t\tfor &#123;</span><br><span class=\"line\">\t\t\tselect &#123;</span><br><span class=\"line\">\t\t\tcase keepResp := &lt;- channel:</span><br><span class=\"line\">\t\t\t\tif keepResp == nil &#123;</span><br><span class=\"line\">\t\t\t\t\tfmt.Println(&quot;租约已经失效&quot;)</span><br><span class=\"line\">\t\t\t\t\treturn</span><br><span class=\"line\">\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\tfmt.Println(&quot;收到自动续约应答：&quot;, keepResp.ID)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;(leaseKeepAliveResp)</span><br><span class=\"line\"></span><br><span class=\"line\">\tdefer cancelFunc()</span><br><span class=\"line\">\tdefer lease.Revoke(context.TODO(), leaseGrandResp.ID)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tkv = clientv3.NewKV(client)</span><br><span class=\"line\">\ttxn := kv.Txn(context.TODO())</span><br><span class=\"line\">\ttxn.If(clientv3.Compare(clientv3.CreateRevision(&quot;/cron/lock/job9&quot;), &quot;=&quot;, 0)).</span><br><span class=\"line\">\t\tThen(clientv3.OpPut(&quot;/cron/lock/job9&quot;, &quot;test&quot;, clientv3.WithLease(leaseGrandResp.ID))).</span><br><span class=\"line\">\t\tElse(clientv3.OpGet(&quot;/cron/lock/job9&quot;))</span><br><span class=\"line\"></span><br><span class=\"line\">\ttxnResp, err := txn.Commit()</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\tfmt.Println(&quot;事务提交失败&quot;)</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif !txnResp.Succeeded &#123;</span><br><span class=\"line\">\t\tfmt.Println(&quot;锁已经被占用&quot;, txnResp.Responses[0].GetResponseRange().Kvs[0].Value)</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Println(&quot;处理任务&quot;)</span><br><span class=\"line\">\ttime.Sleep(15 * time.Second)</span><br><span class=\"line\">\tfmt.Println(&quot;任务处理结束&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","next":{"title":"Mac上安装配置Nginx","slug":"Mac上安装配置Nginx"},"link":"http://yoursite.com/post/基于etcd实现分布式锁/"}