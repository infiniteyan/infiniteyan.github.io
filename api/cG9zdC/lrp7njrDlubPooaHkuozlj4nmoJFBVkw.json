{"title":"实现平衡二叉树AVL","date":"2019-06-26T08:00:43.000Z","slug":"实现平衡二叉树AVL","comments":true,"updated":"2019-06-26T08:01:12.078Z","content":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> data;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> height;</span><br><span class=\"line\">\tNode* left;</span><br><span class=\"line\">\tNode* right;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InOrderTranversal</span><span class=\"params\">(Node* root)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (root == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tInOrderTranversal(root-&gt;left);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; root-&gt;data &lt;&lt; <span class=\"string\">':'</span> &lt;&lt; root-&gt;height &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\tInOrderTranversal(root-&gt;right);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Release</span><span class=\"params\">(Node* root)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (root == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    Release(root-&gt;left);</span><br><span class=\"line\">    Release(root-&gt;right);</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> root;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Search</span><span class=\"params\">(Node*&amp; root, <span class=\"keyword\">int</span> key, Node**&amp; _result)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (root == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t_result = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (key &lt; root-&gt;data) &#123;</span><br><span class=\"line\">        Search(root-&gt;left, key, _result);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key == root-&gt;data) &#123;</span><br><span class=\"line\">\t\t_result = &amp;root;<span class=\"comment\">//put purpoes's addr to result for changing the purpoes pointer point another addr by _delete</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        Search(root-&gt;right, key, _result);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">GetBalanceFactor</span><span class=\"params\">(Node* root)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> val;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (root-&gt;left != <span class=\"number\">0</span> &amp;&amp; root-&gt;right != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tval = root-&gt;left-&gt;height - root-&gt;right-&gt;height;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (root-&gt;left != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tval = root-&gt;left-&gt;height;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (root-&gt;right != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tval = -root-&gt;right-&gt;height;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> val;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CalculateHeight</span><span class=\"params\">(Node* root)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (root-&gt;left != <span class=\"number\">0</span> &amp;&amp; root-&gt;right != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\troot-&gt;height = root-&gt;left-&gt;height &gt; root-&gt;right-&gt;height ? root-&gt;left-&gt;height + <span class=\"number\">1</span> : root-&gt;right-&gt;height + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (root-&gt;left != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\troot-&gt;height = root-&gt;left-&gt;height + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (root-&gt;right != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\troot-&gt;height = root-&gt;right-&gt;height + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\troot-&gt;height = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">cwSpin</span><span class=\"params\">(Node*&amp; root)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (root-&gt;left-&gt;left == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tNode* mid = root-&gt;left;</span><br><span class=\"line\">\t\troot-&gt;left = root-&gt;left-&gt;right;</span><br><span class=\"line\">\t\troot-&gt;left-&gt;left = mid;</span><br><span class=\"line\">\t\tmid-&gt;right = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tCalculateHeight(root-&gt;left-&gt;left);</span><br><span class=\"line\">\t\tCalculateHeight(root-&gt;left);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tNode* ori_root = root;</span><br><span class=\"line\">\troot = root-&gt;left;</span><br><span class=\"line\">\tNode* beta = root-&gt;right;</span><br><span class=\"line\">\troot-&gt;right = ori_root;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (beta != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tori_root-&gt;left = beta;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tori_root-&gt;left = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tCalculateHeight(ori_root);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ccwSpin</span><span class=\"params\">(Node*&amp; root)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (root-&gt;right-&gt;right == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tNode* mid = root-&gt;right;</span><br><span class=\"line\">\t\troot-&gt;right = root-&gt;right-&gt;left;</span><br><span class=\"line\">\t\troot-&gt;right-&gt;right = mid;</span><br><span class=\"line\">\t\tmid-&gt;left = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tCalculateHeight(root-&gt;right-&gt;right);</span><br><span class=\"line\">\t\tCalculateHeight(root-&gt;right);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tNode* ori_root = root;</span><br><span class=\"line\">\troot = root-&gt;right;</span><br><span class=\"line\">\tNode* beta = root-&gt;left;</span><br><span class=\"line\">\troot-&gt;left = ori_root;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (beta != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tori_root-&gt;right = beta;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tori_root-&gt;right = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tCalculateHeight(ori_root);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Insert</span><span class=\"params\">(Node*&amp; root, <span class=\"keyword\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (root == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\troot = <span class=\"keyword\">new</span> Node;</span><br><span class=\"line\">\t\troot-&gt;left = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\troot-&gt;right = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\troot-&gt;data = value;</span><br><span class=\"line\">\t\troot-&gt;height = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (value &gt; root-&gt;data) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!Insert(root-&gt;right, value)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> bf = GetBalanceFactor(root);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (bf == <span class=\"number\">-2</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"right need balance!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t\tccwSpin(root);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value == root-&gt;data) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!Insert(root-&gt;left, value)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> bf = GetBalanceFactor(root);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (bf == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"left need balance!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t\tcwSpin(root);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tCalculateHeight(root);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Delete</span><span class=\"params\">(Node*&amp; root,<span class=\"keyword\">int</span> key)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (root == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (key &lt; root-&gt;data) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Delete(root-&gt;left, key)) &#123;</span><br><span class=\"line\">\t\t\tCalculateHeight(root);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> bf = GetBalanceFactor(root);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (bf == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t\tcwSpin(root);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (bf == <span class=\"number\">-2</span>) &#123;</span><br><span class=\"line\">\t\t\t\tccwSpin(root);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tCalculateHeight(root);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key == root-&gt;data) &#123;</span><br><span class=\"line\">\t\tNode* temp = root;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (root-&gt;left == <span class=\"number\">0</span> &amp;&amp; root-&gt;right == <span class=\"number\">0</span>) &#123;<span class=\"comment\">//leaf node can remove now</span></span><br><span class=\"line\">\t\t\troot = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">delete</span> temp;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (root-&gt;left == <span class=\"number\">0</span>) &#123;<span class=\"comment\">//if has no left,make parent link to right and remove itself</span></span><br><span class=\"line\">\t\t\troot = root-&gt;right;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">delete</span> temp;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (root-&gt;right == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\troot = root-&gt;left;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">delete</span> temp;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tNode* s = root-&gt;right;</span><br><span class=\"line\">\t\t\tNode* s_parent = root;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">stack</span>&lt;Node**&gt; _stack;</span><br><span class=\"line\">\t\t\t_stack.push(&amp;root);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">bool</span> first = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (s-&gt;left != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (first) &#123;</span><br><span class=\"line\">\t\t\t\t\t_stack.push(&amp;s_parent-&gt;right);</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t_stack.push(&amp;s_parent-&gt;left);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\ts_parent = s;</span><br><span class=\"line\">\t\t\t\ts = s-&gt;left;</span><br><span class=\"line\">\t\t\t\tfirst = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\ttemp-&gt;data = s-&gt;data;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (s-&gt;right != <span class=\"number\">0</span>) &#123;<span class=\"comment\">//if end of right's left has right, it should replace end of right's left</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (s_parent == root) &#123;<span class=\"comment\">//if s_parent does not change,s_parent has had left tree,so it should put s'right to s_parent's right</span></span><br><span class=\"line\">\t\t\t\t\ts_parent-&gt;right = s-&gt;right;</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\ts_parent-&gt;left = s-&gt;right;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (s_parent == root) &#123;</span><br><span class=\"line\">\t\t\t\t\ts_parent-&gt;right = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\ts_parent-&gt;left = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (_stack.size() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\tCalculateHeight(*_stack.top());</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> bf = GetBalanceFactor(*_stack.top());</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (bf == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tcwSpin(*_stack.top());</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (bf == <span class=\"number\">-2</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tccwSpin(*_stack.top());</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tCalculateHeight(*_stack.top());</span><br><span class=\"line\">\t\t\t\t_stack.pop();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">delete</span> s;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Delete(root-&gt;right, key)) &#123;</span><br><span class=\"line\">\t\t\tCalculateHeight(root);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> bf = GetBalanceFactor(root);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (bf == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t\tcwSpin(root);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (bf == <span class=\"number\">-2</span>) &#123;</span><br><span class=\"line\">\t\t\t\tccwSpin(root);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tCalculateHeight(root);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tsrand(time(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\">\tNode* root = <span class=\"keyword\">new</span> Node;</span><br><span class=\"line\">\troot-&gt;left = <span class=\"number\">0</span>;</span><br><span class=\"line\">\troot-&gt;right = <span class=\"number\">0</span>;</span><br><span class=\"line\">\troot-&gt;data = <span class=\"number\">10</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">\t\tInsert(root, rand() % <span class=\"number\">100</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tInOrderTranversal(root);</span><br><span class=\"line\">\tNode** _result;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> value;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"please cin the value you want to find:\"</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; value;</span><br><span class=\"line\">\tSearch(root, value, _result);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (_result == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"can't find purpoes!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"the result is:\"</span> &lt;&lt; (*_result)-&gt;data &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"please cin the value you want to delete:\"</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; value;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Delete(root, value)) &#123;</span><br><span class=\"line\">\t\tInOrderTranversal(root);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"delete succeed!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"delete failed!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tRelease(root);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"Linux IO复用之select函数详解","slug":"Linux-IO复用之select函数详解"},"next":{"title":"Linux环境编程之匿名管道","slug":"Linux环境编程之匿名管道"},"link":"http://yoursite.com/post/实现平衡二叉树AVL/"}