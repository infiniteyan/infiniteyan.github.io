{"title":"理解golang的init函数","date":"2019-05-11T05:39:21.000Z","slug":"理解golang的init函数","comments":true,"updated":"2019-05-11T05:51:35.314Z","content":"<p>大家都知道golang里的main函数是程序的入口函数，main函数返回后，程序也就结束了。golang还有另外一个特殊的函数init函数，先于main函数执行，实现包级别的一些初始化操作，今天我们就深入介绍下init的特性。</p>\n<h4 id=\"init函数的主要作用：\">init函数的主要作用：<a href=\"post/理解golang的init函数#init函数的主要作用：\"></a></h4><p>1.初始化不能采用初始化表达式初始化的变量;<br>2.程序运行前的注册;<br>3.实现sync.Once功能;<br>4.其他;</p>\n<h4 id=\"init函数的主要特点：\">init函数的主要特点：<a href=\"post/理解golang的init函数#init函数的主要特点：\"></a></h4><p>1.init函数先于main函数自动执行，不能被其他函数调用;<br>2.init函数没有输入参数、返回值;<br>3.每个包可以有多个init函数;<br>4.包的每个源文件也可以有多个init函数，这点比较特殊;<br>5.同一个包的init执行顺序，golang没有明确定义，编程时要注意程序不要依赖这个执行顺序;<br>6.不同包的init函数按照包导入的依赖关系决定执行顺序;</p>\n<h4 id=\"golang程序初始化\">golang程序初始化<a href=\"post/理解golang的init函数#golang程序初始化\"></a></h4><p>golang程序初始化先于main函数执行，由runtime进行初始化，初始化顺序如下：<br>1.初始化导入的包（包的初始化顺序并不是按导入顺序（“从上到下”）执行的，runtime需要解析包依赖关系，没有依赖的包最先初始化，与变量初始化依赖关系类似，参见golang变量的初始化）；<br>2.初始化包作用域的变量（该作用域的变量的初始化也并非按照“从上到下、从左到右”的顺序，runtime解析变量依赖关系，没有依赖的变量最先初始化，参见golang变量的初始化）；<br>3.执行包的init函数；</p>\n<p>示例1：<br>main.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import (</span><br><span class=\"line\">   &quot;fmt&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">var T int64 = a()</span><br><span class=\"line\"></span><br><span class=\"line\">func init() &#123;</span><br><span class=\"line\">   fmt.Println(&quot;init in main.go &quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func a() int64 &#123;</span><br><span class=\"line\">   fmt.Println(&quot;calling a()&quot;)</span><br><span class=\"line\">   return 2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">func main() &#123;                  </span><br><span class=\"line\">   fmt.Println(&quot;calling main&quot;)     </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">calling a()</span><br><span class=\"line\">init in main.go</span><br><span class=\"line\">calling main</span><br></pre></td></tr></table></figure></p>\n<p>初始化顺序：变量初始化-&gt;init()-&gt;main()</p>\n<p>示例2：<br>pack.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package pack                                                                                          </span><br><span class=\"line\">import (</span><br><span class=\"line\">   &quot;fmt&quot;</span><br><span class=\"line\">   &quot;test_util&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">var Pack int = 6               </span><br><span class=\"line\"></span><br><span class=\"line\">func init() &#123;</span><br><span class=\"line\">   a := test_util.Util        </span><br><span class=\"line\">   fmt.Println(&quot;init pack &quot;, a)    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>test_util.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package test_util</span><br><span class=\"line\">import &quot;fmt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">var Util int = 5</span><br><span class=\"line\"></span><br><span class=\"line\">func init() &#123;</span><br><span class=\"line\">   fmt.Println(&quot;init test_util&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>main.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import (</span><br><span class=\"line\">   &quot;fmt&quot;</span><br><span class=\"line\">   &quot;pack&quot;</span><br><span class=\"line\">   &quot;test_util&quot;                </span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;                  </span><br><span class=\"line\">   fmt.Println(pack.Pack)     </span><br><span class=\"line\">   fmt.Println(test_util.Util)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">init test_util</span><br><span class=\"line\">init pack  5</span><br><span class=\"line\">6</span><br><span class=\"line\">5</span><br></pre></td></tr></table></figure></p>\n<p>由于pack包的初始化依赖test_util，因此运行时先初始化test_util再初始化pack包；</p>\n<p>示例3：<br>sandbox.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import &quot;fmt&quot;</span><br><span class=\"line\">var _ int64 = s()</span><br><span class=\"line\">func init() &#123;</span><br><span class=\"line\">   fmt.Println(&quot;init in sandbox.go&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">func s() int64 &#123;</span><br><span class=\"line\">   fmt.Println(&quot;calling s() in sandbox.go&quot;)</span><br><span class=\"line\">   return 1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">   fmt.Println(&quot;main&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>a.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import &quot;fmt&quot;</span><br><span class=\"line\">var _ int64 = a()</span><br><span class=\"line\">func init() &#123;</span><br><span class=\"line\">   fmt.Println(&quot;init in a.go&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">func a() int64 &#123;</span><br><span class=\"line\">   fmt.Println(&quot;calling a() in a.go&quot;)</span><br><span class=\"line\">   return 2</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>z.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import &quot;fmt&quot;</span><br><span class=\"line\">var _ int64 = z()</span><br><span class=\"line\">func init() &#123;</span><br><span class=\"line\">   fmt.Println(&quot;init in z.go&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">func z() int64 &#123;</span><br><span class=\"line\">   fmt.Println(&quot;calling z() in z.go&quot;)</span><br><span class=\"line\">   return 3</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">calling a() in a.go</span><br><span class=\"line\">calling s() in sandbox.go</span><br><span class=\"line\">calling z() in z.go</span><br><span class=\"line\">init in a.go</span><br><span class=\"line\">init in sandbox.go</span><br><span class=\"line\">init in z.go</span><br><span class=\"line\">main</span><br></pre></td></tr></table></figure></p>\n<p>同一个包不同源文件的init函数执行顺序，golang spec没做说明，以上述程序输出来看，执行顺序是源文件名称的字典序。</p>\n<p>示例4：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import &quot;fmt&quot;</span><br><span class=\"line\">func init() &#123;</span><br><span class=\"line\">   fmt.Println(&quot;init&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">   init()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>init函数不可以被调用，上面代码会提示：undefined: init</p>\n<p>示例5：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import &quot;fmt&quot;</span><br><span class=\"line\">func init() &#123;</span><br><span class=\"line\">   fmt.Println(&quot;init 1&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">func init() &#123;</span><br><span class=\"line\">   fmt.Println(&quot;init 2&quot;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">   fmt.Println(&quot;main&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">init 1</span><br><span class=\"line\">init 2</span><br><span class=\"line\">main</span><br></pre></td></tr></table></figure></p>\n<p>init函数比较特殊，可以在包里被多次定义。</p>\n<p>示例6：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var initArg [20]int</span><br><span class=\"line\">func init() &#123;</span><br><span class=\"line\">   initArg[0] = 10</span><br><span class=\"line\">   for i := 1; i &lt; len(initArg); i++ &#123;</span><br><span class=\"line\">       initArg[i] = initArg[i-1] * 2</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>init函数的主要用途：初始化不能使用初始化表达式初始化的变量</p>\n<p>示例7：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import _ &quot;net/http/pprof&quot;</span><br></pre></td></tr></table></figure></p>\n<p>golang对没有使用的导入包会编译报错，但是有时我们只想调用该包的init函数，不使用包导出的变量或者方法，这时就采用上面的导入方案。</p>\n","prev":{"title":"GO语言新手可能会踩的50个坑（二）","slug":"GO语言新手可能会踩的50个坑（二）"},"next":{"title":"GO语言新手可能会踩的50个坑（一）","slug":"GO语言新手可能会踩的50个坑（一）"},"link":"http://yoursite.com/post/理解golang的init函数/"}