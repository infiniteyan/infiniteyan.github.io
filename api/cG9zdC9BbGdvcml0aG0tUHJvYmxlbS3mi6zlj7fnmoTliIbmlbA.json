{"title":"Algorithm-Problem-括号的分数","date":"2020-03-31T08:27:19.000Z","slug":"Algorithm-Problem-括号的分数","comments":true,"updated":"2020-03-31T08:30:15.372Z","content":"<h3 id=\"问题描述\">问题描述<a href=\"post/Algorithm-Problem-括号的分数#问题描述\"></a></h3><p>给定一个平衡括号字符串 S，按下述规则计算该字符串的分数：</p>\n<ul>\n<li>() 得 1 分。</li>\n<li>AB 得 A + B 分，其中 A 和 B 是平衡括号字符串。</li>\n<li>(A) 得 2 * A 分，其中 A 是平衡括号字符串。</li>\n</ul>\n<h4 id=\"示例-1：\">示例 1：<a href=\"post/Algorithm-Problem-括号的分数#示例-1：\"></a></h4><p>输入： “()”<br>输出： 1</p>\n<h4 id=\"示例-2：\">示例 2：<a href=\"post/Algorithm-Problem-括号的分数#示例-2：\"></a></h4><p>输入： “(())”<br>输出： 2</p>\n<h4 id=\"示例-3：\">示例 3：<a href=\"post/Algorithm-Problem-括号的分数#示例-3：\"></a></h4><p>输入： “()()”<br>输出： 2</p>\n<h4 id=\"示例-4：\">示例 4：<a href=\"post/Algorithm-Problem-括号的分数#示例-4：\"></a></h4><p>输入： “(()(()))”<br>输出： 6</p>\n<h4 id=\"解题思路\">解题思路<a href=\"post/Algorithm-Problem-括号的分数#解题思路\"></a></h4><p>栈</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">enum</span> Type &#123;</span><br><span class=\"line\">    TYPE_VALUE,</span><br><span class=\"line\">    TYPE_CHAR_LEFT,</span><br><span class=\"line\">    TYPE_CHAR_RIGHT</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Element</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    Type m_type;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m_val;</span><br><span class=\"line\"></span><br><span class=\"line\">    Element(Type type, <span class=\"keyword\">int</span> value) : m_type(type), m_val(value) &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">scoreOfParentheses</span><span class=\"params\">(<span class=\"built_in\">string</span> S)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (S.empty()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> length = S.size();</span><br><span class=\"line\">        <span class=\"built_in\">stack</span>&lt;Element&gt; stacks;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (S[i] == <span class=\"string\">'('</span>) &#123;</span><br><span class=\"line\">                stacks.push(Element(TYPE_CHAR_LEFT, <span class=\"number\">0</span>));</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> innerValue = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (stacks.size() != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    Element e = stacks.top();</span><br><span class=\"line\">                    stacks.pop();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (e.m_type == TYPE_VALUE) &#123;</span><br><span class=\"line\">                        innerValue += e.m_val;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (e.m_type == TYPE_CHAR_LEFT) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (innerValue == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    innerValue = <span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    innerValue *= <span class=\"number\">2</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                stacks.push(Element(TYPE_VALUE, innerValue));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (stacks.size() == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            ret = stacks.top().m_val;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (stacks.size() != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                Element e = stacks.top();</span><br><span class=\"line\">                stacks.pop();</span><br><span class=\"line\">                ret += e.m_val;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">string</span> str = <span class=\"string\">\"(()(()))\"</span>;</span><br><span class=\"line\">    Solution solution;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ret = solution.scoreOfParentheses(str);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; ret &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","next":{"title":"多线程编程-互斥锁","slug":"多线程编程-互斥锁"},"link":"http://yoursite.com/post/Algorithm-Problem-括号的分数/"}