{"title":"Algorithm-Problem-二叉树转换成链表","date":"2020-03-07T15:42:02.000Z","slug":"Algorithm-Problem-二叉树转换成链表","comments":true,"updated":"2020-03-07T15:46:28.727Z","content":"<h3 id=\"问题描述\">问题描述<a href=\"post/Algorithm-Problem-二叉树转换成链表#问题描述\"></a></h3><p>给定一个二叉树，原地将它展开为链表。</p>\n<p>例如，给定二叉树<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    1</span><br><span class=\"line\">   / \\</span><br><span class=\"line\">  2   5</span><br><span class=\"line\"> / \\   \\</span><br><span class=\"line\">3   4   6</span><br></pre></td></tr></table></figure></p>\n<p>将其展开为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\"> \\</span><br><span class=\"line\">  2</span><br><span class=\"line\">   \\</span><br><span class=\"line\">    3</span><br><span class=\"line\">     \\</span><br><span class=\"line\">      4</span><br><span class=\"line\">       \\</span><br><span class=\"line\">        5</span><br><span class=\"line\">         \\</span><br><span class=\"line\">          6</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"解决方法\">解决方法<a href=\"post/Algorithm-Problem-二叉树转换成链表#解决方法\"></a></h3><p>分治 + 递归</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">type TreeNode <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">\tVal \t<span class=\"keyword\">int</span></span><br><span class=\"line\">\tLeft \t*TreeNode</span><br><span class=\"line\">\tRight \t*TreeNode</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">func <span class=\"title\">convertToList</span><span class=\"params\">(root *TreeNode)</span> <span class=\"params\">(*TreeNode, *TreeNode)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root == nil &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> nil, nil</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar head *TreeNode</span><br><span class=\"line\">\tvar tail *TreeNode</span><br><span class=\"line\">\thead = root</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> root.Left == nil &amp;&amp; root.Right == nil &#123;</span><br><span class=\"line\">\t\ttail = root</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> head, tail</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tleftPtr := root.Left</span><br><span class=\"line\">\trightPtr := root.Right</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> leftPtr != nil &#123;</span><br><span class=\"line\">\t\troot.Left = nil</span><br><span class=\"line\">\t\tleftH, leftT := convertToList(leftPtr)</span><br><span class=\"line\">\t\troot.Right = leftH</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> rightPtr != nil &#123;</span><br><span class=\"line\">\t\t\trightH, rightT := convertToList(rightPtr)</span><br><span class=\"line\">\t\t\tleftT.Right = rightH</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> head, rightT</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> head, leftT</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t_, rightT := convertToList(rightPtr)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> head, rightT</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func flatten(root *TreeNode)  &#123;</span><br><span class=\"line\">\tconvertToList(root)</span><br><span class=\"line\"></span><br><span class=\"line\">\tptr := root</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ptr == nil &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfmt.Printf(<span class=\"string\">\"%d--&gt;\"</span>, ptr.Val)</span><br><span class=\"line\">\t\tptr = ptr.Right</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tone := TreeNode&#123;Val: <span class=\"number\">1</span>, Left:nil, Right:nil&#125;</span><br><span class=\"line\">\ttwo := TreeNode&#123;Val: <span class=\"number\">2</span>, Left: nil, Right: nil&#125;</span><br><span class=\"line\">\tthree := TreeNode&#123;Val: <span class=\"number\">3</span>, Left: nil, Right: nil&#125;</span><br><span class=\"line\">\tfour := TreeNode&#123;Val: <span class=\"number\">4</span>, Left: nil, Right: nil&#125;</span><br><span class=\"line\">\tfive := TreeNode&#123;Val: <span class=\"number\">5</span>, Left: nil, Right: nil&#125;</span><br><span class=\"line\">\tsix := TreeNode&#123;Val: <span class=\"number\">6</span>, Left: nil, Right: nil&#125;</span><br><span class=\"line\">\ttwo.Left = &amp;three</span><br><span class=\"line\">\ttwo.Right = &amp;four</span><br><span class=\"line\">\tfive.Right = &amp;six</span><br><span class=\"line\">\tone.Left = &amp;two</span><br><span class=\"line\">\tone.Right = &amp;five</span><br><span class=\"line\">\tflatten(&amp;one)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"异步dns域名解析","slug":"异步dns域名解析"},"next":{"title":"Algorithm-Problem-解码方法","slug":"Algorithm-Problem-解码方法"},"link":"http://yoursite.com/post/Algorithm-Problem-二叉树转换成链表/"}