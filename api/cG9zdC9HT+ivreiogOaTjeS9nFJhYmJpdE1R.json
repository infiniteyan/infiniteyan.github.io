{"title":"GO语言操作RabbitMQ","date":"2019-04-13T06:02:28.000Z","slug":"GO语言操作RabbitMQ","comments":true,"updated":"2019-04-13T06:05:12.036Z","content":"<p>send.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;fmt&quot;</span><br><span class=\"line\">\t&quot;github.com/streadway/amqp&quot;</span><br><span class=\"line\">\t&quot;os&quot;</span><br><span class=\"line\">\t&quot;time&quot;</span><br><span class=\"line\">\t&quot;math/rand&quot;</span><br><span class=\"line\">\t&quot;strconv&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func checkError(err error, msg string) &#123;</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\tfmt.Println(msg, err)</span><br><span class=\"line\">\t\tos.Exit(-1)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var (</span><br><span class=\"line\">\tHOST = &quot;amqp://guest:guest@localhost:5672/&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tconn, err := amqp.Dial(HOST)</span><br><span class=\"line\">\tcheckError(err, &quot;Failed to connect to the server, error: &quot;)</span><br><span class=\"line\">\tdefer conn.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tch, err := conn.Channel()</span><br><span class=\"line\">\tcheckError(err, &quot;Failed to get a channel&quot;)</span><br><span class=\"line\">\tdefer ch.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tqueue, err := ch.QueueDeclare(</span><br><span class=\"line\">\t\t&quot;hello&quot;,</span><br><span class=\"line\">\t\tfalse,</span><br><span class=\"line\">\t\tfalse,</span><br><span class=\"line\">\t\tfalse,</span><br><span class=\"line\">\t\tfalse,</span><br><span class=\"line\">\t\tnil,</span><br><span class=\"line\">\t\t)</span><br><span class=\"line\"></span><br><span class=\"line\">\tcheckError(err, &quot;Failed to declare a queue.&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\trand.Seed(time.Now().UTC().Unix())</span><br><span class=\"line\">\tfor &#123;</span><br><span class=\"line\">\t\terr = ch.Publish(</span><br><span class=\"line\">\t\t\t&quot;&quot;,</span><br><span class=\"line\">\t\t\tqueue.Name,</span><br><span class=\"line\">\t\t\tfalse,</span><br><span class=\"line\">\t\t\tfalse,</span><br><span class=\"line\">\t\t\tamqp.Publishing&#123;</span><br><span class=\"line\">\t\t\t\tContentType:&quot;text/plain&quot;,</span><br><span class=\"line\">\t\t\t\tMessageId: strconv.Itoa(rand.Intn(999999)),</span><br><span class=\"line\">\t\t\t\tBody: []byte(&quot;hi there&quot;),</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcheckError(err, &quot;Failed to publish a message.&quot;)</span><br><span class=\"line\">\t\tfmt.Println(&quot;succeed to send a message...&quot;)</span><br><span class=\"line\">\t\ttime.Sleep(time.Millisecond * 100)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tforever := make(chan int)</span><br><span class=\"line\">\t&lt;-forever</span><br><span class=\"line\">\tfmt.Println(&quot;finished...&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>recv.go<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;fmt&quot;</span><br><span class=\"line\">\t&quot;github.com/streadway/amqp&quot;</span><br><span class=\"line\">\t&quot;os&quot;</span><br><span class=\"line\">\t&quot;time&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">var (</span><br><span class=\"line\">\tHOST = &quot;amqp://guest:guest@localhost:5672/&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func checkError(err error, msg string) &#123;</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\tfmt.Println(msg + &quot;  error: &quot;, err)</span><br><span class=\"line\">\t\tos.Exit(-1)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main()  &#123;</span><br><span class=\"line\">\tconn, err := amqp.Dial(HOST)</span><br><span class=\"line\">\tcheckError(err, &quot;Failed to connect to RabbitMQ.&quot;)</span><br><span class=\"line\">\tdefer conn.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tch, err := conn.Channel()</span><br><span class=\"line\">\tcheckError(err, &quot;Failed to open a channel.&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tq, err := ch.QueueDeclare(</span><br><span class=\"line\">\t\t&quot;hello&quot;,</span><br><span class=\"line\">\t\tfalse,</span><br><span class=\"line\">\t\tfalse,</span><br><span class=\"line\">\t\tfalse,</span><br><span class=\"line\">\t\tfalse,</span><br><span class=\"line\">\t\tnil,</span><br><span class=\"line\">\t\t)</span><br><span class=\"line\">\tcheckError(err, &quot;Failed to declare a queue.&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tmsgs, err := ch.Consume(</span><br><span class=\"line\">\t\tq.Name,</span><br><span class=\"line\">\t\t&quot;&quot;,</span><br><span class=\"line\">\t\ttrue,</span><br><span class=\"line\">\t\tfalse,</span><br><span class=\"line\">\t\tfalse,</span><br><span class=\"line\">\t\tfalse,</span><br><span class=\"line\">\t\tnil,</span><br><span class=\"line\">\t\t)</span><br><span class=\"line\">\tcheckError(err, &quot;Failed to register a consumer.&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tforever := make(chan int)</span><br><span class=\"line\">\tgo func() &#123;</span><br><span class=\"line\">\t\tfor d := range msgs &#123;</span><br><span class=\"line\">\t\t\tfmt.Printf(&quot;============new msg==========\\ntype:%s\\nmessage id:%s\\nbody:%s\\n\\n&quot;,</span><br><span class=\"line\">\t\t\t\td.Type, d.MessageId, d.Body)</span><br><span class=\"line\">\t\t\ttime.Sleep(time.Second * 1)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;()</span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Println(&quot;Waitting for messages to come...&quot;)</span><br><span class=\"line\">\t&lt;- forever</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","prev":{"title":"GO语言ORM操作","slug":"GO语言ORM操作"},"next":{"title":"GO实现简单聊天室","slug":"GO实现简单聊天室"},"link":"http://yoursite.com/post/GO语言操作RabbitMQ/"}