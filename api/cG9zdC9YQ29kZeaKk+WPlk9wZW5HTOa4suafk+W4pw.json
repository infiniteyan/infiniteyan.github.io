{"title":"XCode抓取OpenGL渲染帧","date":"2019-02-27T14:47:58.000Z","slug":"XCode抓取OpenGL渲染帧","comments":true,"updated":"2019-02-27T14:53:15.841Z","content":"<p>把手机连到Xcode点击菜单的Product-&gt;Run，启动想要抓帧的APP。或者直接打开手机后，启动想要抓帧的APP。<br>点击菜单的Debug-&gt;Capture GPU frame,会进行屏幕截取。</p>\n<p><img src=\"/2019/02/27/XCode抓取OpenGL渲染帧/001.jpeg\" alt=\"aa\"><br>如图，但刚进去时，CommandBuffer是收缩的，下面的RenderCommandEncoder也是收缩的。我们要看草的shader编译后的代码，所以要打开每个RenderCommandEncoder，看下面的Camera.Render-&gt;Drawing，这里草这个的Drawing下面的Render.OpaqueGeometry，双击即可打开有左边的窗口和草的绿色格子的窗口，但右边的代码的窗口无法看到。<br>此时，点击菜单的View-&gt;Asistant Editor-&gt;Show Asistant Editor，即可打开右边的窗口，在右侧选择Bound GPu Objects-&gt;Functions-&gt;Vertex和fragment，能分别查看编译后的metal或openGLES的vertex或fragment的代码。<br>note：有时候第一次打不开，重新插一次手机，或者product-&gt;Scheme-&gt;EditScheme,左边的Run签页，右边选择option选项，将GPU Frame Capture设为Automatically Enabled后试试。</p>\n","prev":{"title":"Algorithm Problem : Calculating Relative Paths","slug":"Algorithm-Problem-Calculating-Relative-Paths"},"next":{"title":"cpp中虚函数表","slug":"cpp中虚函数表"},"link":"http://yoursite.com/post/XCode抓取OpenGL渲染帧/"}