{"title":"Algorithm Problem : Convert Binary Tree to Doubly Linked List","date":"2019-03-06T04:46:37.000Z","slug":"Algorithm-Problem-Convert-Binary-Tree-to-Doubly-Linked-List","comments":true,"updated":"2019-03-06T04:48:12.443Z","content":"<p>Given a Binary Tree (BT), convert it to a Doubly Linked List(DLL) In-Place. The left and right pointers in nodes are to be used as previous and next pointers respectively in converted DLL. The order of nodes in DLL must be same as Inorder of the given Binary Tree. The first node of Inorder traversal (left most node in BT) must be head node of the DLL.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void convertToDLL(BinaryNode* root, BinaryNode*&amp; head, BinaryNode*&amp; tail) &#123;</span><br><span class=\"line\">    if (NULL == root) &#123;</span><br><span class=\"line\">        head = NULL;</span><br><span class=\"line\">        tail = NULL;</span><br><span class=\"line\">        return;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (root-&gt;left == NULL &amp;&amp; root-&gt;right == NULL) &#123;</span><br><span class=\"line\">        head = root;</span><br><span class=\"line\">        tail = root;</span><br><span class=\"line\">        return;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (root-&gt;left != NULL) &#123;</span><br><span class=\"line\">        BinaryNode* headPtr = NULL;</span><br><span class=\"line\">        BinaryNode* tailPtr = NULL;</span><br><span class=\"line\">        convertToDLL(root-&gt;left, headPtr, tailPtr);</span><br><span class=\"line\">        tailPtr-&gt;right = root;</span><br><span class=\"line\">        root-&gt;left = tailPtr;</span><br><span class=\"line\">        head = headPtr;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        head = root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (root-&gt;right != NULL) &#123;</span><br><span class=\"line\">        BinaryNode* headPtr = NULL;</span><br><span class=\"line\">        BinaryNode* tailPtr = NULL;</span><br><span class=\"line\">        convertToDLL(root-&gt;right, headPtr, tailPtr);</span><br><span class=\"line\">        headPtr-&gt;left = root;</span><br><span class=\"line\">        root-&gt;right = headPtr;</span><br><span class=\"line\">        tail = tailPtr;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        tail = root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"Algorithm Problem : 计算符号组合","slug":"Algorithm-Problem-计算符号组合"},"next":{"title":"Algorithm Problem : 多种二叉树遍历算法","slug":"Algorithm-Problem-多种二叉树遍历算法"},"link":"http://yoursite.com/post/Algorithm-Problem-Convert-Binary-Tree-to-Doubly-Linked-List/"}