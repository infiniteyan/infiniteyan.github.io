{"title":"GO使用Consul实现服务发现","date":"2019-04-15T14:40:47.000Z","slug":"GO使用Consul实现服务发现","comments":true,"updated":"2019-04-15T14:42:10.316Z","content":"<p>服务端代码<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">\tconsulapi <span class=\"string\">\"github.com/hashicorp/consul/api\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"io\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"net\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"net/http\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"strconv\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">\tCHECK_PORT = <span class=\"number\">8080</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">func <span class=\"title\">checkFunc</span><span class=\"params\">(writer http.ResponseWriter, req *http.Request)</span> </span>&#123;</span><br><span class=\"line\">\tfmt.Fprintln(writer, <span class=\"string\">\"consul check\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">func <span class=\"title\">runCheckService</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\thttp.HandleFunc(<span class=\"string\">\"/check\"</span>, checkFunc)</span><br><span class=\"line\">\thttp.ListenAndServe(fmt.Sprintf(<span class=\"string\">\":%d\"</span>, CHECK_PORT), nil)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">func <span class=\"title\">registerService</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tconfig := consulapi.DefaultConfig()</span><br><span class=\"line\">\tclient, err := consulapi.NewClient(config)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != nil &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"Failed to create consul client, err:\"</span>, err)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tregistration := <span class=\"keyword\">new</span>(consulapi.AgentServiceRegistration)</span><br><span class=\"line\">\tregistration.ID = <span class=\"string\">\"serverNode_1\"</span></span><br><span class=\"line\">\tregistration.Name = <span class=\"string\">\"serverNode\"</span></span><br><span class=\"line\">\tregistration.Tags = []<span class=\"built_in\">string</span>&#123;<span class=\"string\">\"serverNode\"</span>&#125;</span><br><span class=\"line\">\tregistration.Address = <span class=\"string\">\"127.0.0.1\"</span></span><br><span class=\"line\">\tregistration.Port = <span class=\"number\">9527</span></span><br><span class=\"line\">\tregistration.Check = &amp;consulapi.AgentServiceCheck&#123;</span><br><span class=\"line\">\t\tHTTP:<span class=\"string\">\"http://\"</span> + registration.Address + <span class=\"string\">\":\"</span> + strconv.Itoa(CHECK_PORT) + <span class=\"string\">\"/check\"</span>,</span><br><span class=\"line\">\t\tTimeout: <span class=\"string\">\"3s\"</span>,</span><br><span class=\"line\">\t\tInterval: <span class=\"string\">\"5s\"</span>,</span><br><span class=\"line\">\t\tDeregisterCriticalServiceAfter: <span class=\"string\">\"10s\"</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\terr = client.Agent().ServiceRegister(registration)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != nil &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">\"Failed to register service.\"</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func HandleConnection(con net.Conn) &#123;</span><br><span class=\"line\">\tdefer con.Close()</span><br><span class=\"line\">\tbuf := make([]byte, <span class=\"number\">1024</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\tlen, err := con.Read(buf)</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span> err &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> nil:</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">\"get and echo:\"</span>, <span class=\"string\">\"EchoServer \"</span> + <span class=\"built_in\">string</span>(buf[<span class=\"number\">0</span>:len]))</span><br><span class=\"line\">\t\t\tcon.Write(append([]byte(<span class=\"string\">\"Server echo: \"</span>), buf[<span class=\"number\">0</span>:len]...))</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> io.EOF:</span><br><span class=\"line\">\t\t\tfmt.Printf(<span class=\"string\">\"Read end.\\n\"</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\tfmt.Printf(<span class=\"string\">\"Error: Reading data: %s\\n\"</span>, err)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tgo registerService()</span><br><span class=\"line\">\tgo runCheckService()</span><br><span class=\"line\"></span><br><span class=\"line\">\tln, err := net.Listen(<span class=\"string\">\"tcp\"</span>, <span class=\"string\">\"0.0.0.0:9527\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != nil &#123;</span><br><span class=\"line\">\t\tpanic(<span class=\"string\">\"Error:\"</span> + err.Error())</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\tconn, err := ln.Accept()</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err != nil &#123;</span><br><span class=\"line\">\t\t\tfmt.Println(err)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tgo HandleConnection(conn)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tforever := make(chan <span class=\"keyword\">int</span>)</span><br><span class=\"line\">\t&lt;- forever</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>客户端代码<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"log\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"net\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"time\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tconsulapi <span class=\"string\">\"github.com/hashicorp/consul/api\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> RECV_BUF_LEN = <span class=\"number\">1024</span></span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tclient, err := consulapi.NewClient(consulapi.DefaultConfig())</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != nil &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">log</span>.Fatal(<span class=\"string\">\"consul client error : \"</span>, err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\ttime.Sleep(time.Second * <span class=\"number\">3</span>)</span><br><span class=\"line\">\t\tvar services <span class=\"built_in\">map</span>[<span class=\"built_in\">string</span>]*consulapi.AgentService</span><br><span class=\"line\">\t\tvar err error</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tservices, err = client.Agent().Services()</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> nil != err &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">log</span>.Println(<span class=\"string\">\"in consual list Services:\"</span>, err)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> _, found := services[<span class=\"string\">\"serverNode_1\"</span>]; !found &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">log</span>.Println(<span class=\"string\">\"serverNode_1 not found\"</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tsendData(services[<span class=\"string\">\"serverNode_1\"</span>])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">func <span class=\"title\">sendData</span><span class=\"params\">(service *consulapi.AgentService)</span> </span>&#123;</span><br><span class=\"line\">\tconn, err := net.Dial(<span class=\"string\">\"tcp\"</span>, fmt.Sprintf(<span class=\"string\">\"%s:%d\"</span>, service.Address, service.Port))</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != nil &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">log</span>.Println(err)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdefer conn.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tbuf := make([]byte, RECV_BUF_LEN)</span><br><span class=\"line\">\ti := <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\ti++</span><br><span class=\"line\">\t\tmsg := fmt.Sprintf(<span class=\"string\">\"Hello World, %03d\"</span>, i)</span><br><span class=\"line\">\t\tn, err := conn.Write([]byte(msg))</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err != nil &#123;</span><br><span class=\"line\">\t\t\tprintln(<span class=\"string\">\"Write Buffer Error:\"</span>, err.Error())</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tn, err = conn.Read(buf)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err != nil &#123;</span><br><span class=\"line\">\t\t\tprintln(<span class=\"string\">\"Read Buffer Error:\"</span>, err.Error())</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">log</span>.Println(<span class=\"string\">\"get:\"</span>, <span class=\"built_in\">string</span>(buf[<span class=\"number\">0</span>:n]))</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//等一秒钟</span></span><br><span class=\"line\">\t\ttime.Sleep(time.Second)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","prev":{"title":"GO实现socket拆包解包通信","slug":"GO实现socket拆包解包通信"},"next":{"title":"GO语言ORM操作","slug":"GO语言ORM操作"},"link":"http://yoursite.com/post/GO使用Consul实现服务发现/"}