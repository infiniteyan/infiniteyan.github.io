{"title":"HTTP协议之Range、Content-Range","date":"2019-05-31T06:03:14.000Z","slug":"HTTP协议之Range、Content-Range","comments":true,"updated":"2019-05-31T06:09:48.039Z","content":"<h4 id=\"前言\">前言<a href=\"post/HTTP协议之Range、Content-Range#前言\"></a></h4><p>目前，大多数视频点播和音频点播都是通过HTTP协议进行的。其中主要基于HTTP协议中的Range和Content-Range，HTTP协议从1.1开始支持获取文件的部分内容，这为并行下载以及断点续传提供了技术支持。它通过在Header里两个参数实现的，客户端发请求时对应的是Range，服务器端响应时对应的是Content-Range。</p>\n<h4 id=\"Range的诞生\">Range的诞生<a href=\"post/HTTP协议之Range、Content-Range#Range的诞生\"></a></h4><p>Range，是在 HTTP/1.1里新增的一个请求头字段域。我们使用的迅雷等支持多线程下载以及断点下载的核心也是基于此重要特性。</p>\n<h5 id=\"HTTP-1-1规范的-Range-的约定\">HTTP/1.1规范的 Range 的约定<a href=\"post/HTTP协议之Range、Content-Range#HTTP-1-1规范的-Range-的约定\"></a></h5><p>如果Server支持 Range，首先就要告诉客户端，服务器会在响应头中添加Accept-Ranges: bytes来表示支持 Range 的请求，之后客户端才可能发起带 Range 的请求。不支持的话，用Accept-Ranges: none告知客户端，对不起，我不支持。<br>Server通过请求头中的Range: bytes=0-xxx来判断是否是做 Range 请求，如果这个值存在而且有效，则只发回请求的那部分文件内容，响应的状态码变成206，表示Partial Content，并设置Content-Range。如果无效，则返回416状态码，表明Request Range Not Satisfiable。如果请求头中不带 Range，那么 Server则正常响应，也不会设置 Content-Range 等。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Value\tDescription</span><br><span class=\"line\">206\t    Partial Content</span><br><span class=\"line\">416\t    Range Not Satisfiable</span><br></pre></td></tr></table></figure></p>\n<p>Range的格式为：<br>Range:(unit=first byte pos)-[last byte pos]，即Range: 单位（如bytes）= 开始字节位置-结束字节位置。<br>我们再来看个例子。假设我们要开启多线程下载，需要把一个大文件分割成多个部分进行下载，比如4个部分，然后创建4个线程，每个线程负责下载一个部分，如果文件大小为 5000 个 byte（随意的数字），那么我们可以划分为<br>Range: bytes=0-1199 头1200个字节<br>Range: bytes=1200-2399 第二个1200字节<br>Range: bytes=2400-3599 第三个1200字节<br>Range: bytes=3600-5000 最后的1400字节</p>\n<p>服务器给出响应：<br>// 第1个响应<br>Content-Length：1200<br>Content-Range：bytes 0-1199/5000</p>\n<p>// 第2个响应<br>Content-Length：1200<br>Content-Range：bytes 1200-2399/5000</p>\n<p>// 第3个响应<br>Content-Length：1200<br>Content-Range：bytes 2400-3599/5000</p>\n<p>// 第4个响应<br>Content-Length：1400<br>Content-Range：bytes 3600-5000/5000</p>\n<p>如果每个请求都成功了，服务器返回的response头中有一个 Content-Range 的字段域，Content-Range 用于响应头，告诉了客户端发送了多少数据，它描述了响应覆盖的范围和整个实体长度。一般格式：<br>Content-Range: bytes (unit first byte pos) - [last byte pos]/[entity length]即Content-Range：字节 开始字节位置-结束字节位置／文件大小。</p>\n","prev":{"title":"Linux多线程信号量同步线程","slug":"Linux多线程信号量同步线程"},"next":{"title":"GDB调试工具总结","slug":"GDB调试工具总结"},"link":"http://yoursite.com/post/HTTP协议之Range、Content-Range/"}