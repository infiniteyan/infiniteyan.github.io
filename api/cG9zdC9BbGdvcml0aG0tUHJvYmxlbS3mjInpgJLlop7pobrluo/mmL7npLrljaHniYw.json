{"title":"Algorithm-Problem-按递增顺序显示卡牌","date":"2020-03-08T13:57:49.000Z","slug":"Algorithm-Problem-按递增顺序显示卡牌","comments":true,"updated":"2020-03-08T14:00:14.641Z","content":"<h3 id=\"问题描述\">问题描述<a href=\"post/Algorithm-Problem-按递增顺序显示卡牌#问题描述\"></a></h3><p>牌组中的每张卡牌都对应有一个唯一的整数。你可以按你想要的顺序对这套卡片进行排序。<br>最初，这些卡牌在牌组里是正面朝下的（即，未显示状态）。<br>现在，重复执行以下步骤，直到显示所有卡牌为止：<br>从牌组顶部抽一张牌，显示它，然后将其从牌组中移出。<br>如果牌组中仍有牌，则将下一张处于牌组顶部的牌放在牌组的底部。<br>如果仍有未显示的牌，那么返回步骤 1。否则，停止行动。<br>返回能以递增顺序显示卡牌的牌组顺序。<br>答案中的第一张牌被认为处于牌堆顶部。</p>\n<p>输入：[17,13,11,2,3,5,7]<br>输出：[2,13,3,11,5,17,7]<br>解释：<br>我们得到的牌组顺序为 [17,13,11,2,3,5,7]（这个顺序不重要），然后将其重新排序。<br>重新排序后，牌组以 [2,13,3,11,5,17,7] 开始，其中 2 位于牌组的顶部。<br>我们显示 2，然后将 13 移到底部。牌组现在是 [3,11,5,17,7,13]。<br>我们显示 3，并将 11 移到底部。牌组现在是 [5,17,7,13,11]。<br>我们显示 5，然后将 17 移到底部。牌组现在是 [7,13,11,17]。<br>我们显示 7，并将 13 移到底部。牌组现在是 [11,17,13]。<br>我们显示 11，然后将 17 移到底部。牌组现在是 [13,17]。<br>我们展示 13，然后将 17 移到底部。牌组现在是 [17]。<br>我们显示 17。<br>由于所有卡片都是按递增顺序排列显示的，所以答案是正确的。</p>\n<h3 id=\"解决方法\">解决方法<a href=\"post/Algorithm-Problem-按递增顺序显示卡牌#解决方法\"></a></h3><p>排序 + 双向链表</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"container/list\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"sort\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func deckRevealedIncreasing(deck []int) []int &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> deck == nil &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> nil</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tret := []<span class=\"keyword\">int</span>&#123;&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> len(deck) == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tsort.Slice(deck, func(i, j <span class=\"keyword\">int</span>) <span class=\"keyword\">bool</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> deck[i] &lt; deck[j]</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tdl := <span class=\"built_in\">list</span>.New()</span><br><span class=\"line\">\tlength := len(deck)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i-- &#123;</span><br><span class=\"line\">\t\tele := deck[i]</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> dl.Len() == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t\tdl.PushBack(ele)</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\ttail := dl.Back()</span><br><span class=\"line\">\t\t\tdl.Remove(tail)</span><br><span class=\"line\">\t\t\tdl.PushFront(tail.Value)</span><br><span class=\"line\">\t\t\tdl.PushFront(ele)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> ite := dl.Front(); ite != nil; ite = ite.Next() &#123;</span><br><span class=\"line\">\t\tret = append(ret, ite.Value.(<span class=\"keyword\">int</span>))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tdata := []<span class=\"keyword\">int</span>&#123;<span class=\"number\">17</span>, <span class=\"number\">13</span>, <span class=\"number\">11</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Println(deckRevealedIncreasing(data))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","next":{"title":"异步dns域名解析","slug":"异步dns域名解析"},"link":"http://yoursite.com/post/Algorithm-Problem-按递增顺序显示卡牌/"}