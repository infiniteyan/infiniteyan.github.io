{"title":"Algorithm-Problem-为运算表达式设计优先级","date":"2020-02-29T08:07:05.000Z","slug":"Algorithm-Problem-为运算表达式设计优先级","comments":true,"updated":"2020-02-29T08:09:09.269Z","content":"<h3 id=\"问题描述\">问题描述<a href=\"post/Algorithm-Problem-为运算表达式设计优先级#问题描述\"></a></h3><p>给定一个含有数字和运算符的字符串，为表达式添加括号，改变其运算优先级以求出不同的结果。你需要给出所有可能的组合的结果。有效的运算符号包含 +, - 以及 * 。</p>\n<p>输入: “2<em>3-4</em>5”<br>输出: [-34, -14, -10, -10, 10]<br>解释:<br>(2<em>(3-(4</em>5))) = -34<br>((2<em>3)-(4</em>5)) = -14<br>((2<em>(3-4))</em>5) = -10<br>(2<em>((3-4)</em>5)) = -10<br>(((2<em>3)-4)</em>5) = 10</p>\n<h3 id=\"解决方法\">解决方法<a href=\"post/Algorithm-Problem-为运算表达式设计优先级#解决方法\"></a></h3><p> 分治 + 递归</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">\t<span class=\"string\">\"strconv\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">func <span class=\"title\">isDigit</span><span class=\"params\">(s <span class=\"built_in\">string</span>)</span> <span class=\"keyword\">bool</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> s == <span class=\"string\">\"+\"</span> || s == <span class=\"string\">\"-\"</span> || s == <span class=\"string\">\"*\"</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func calValue(v1 <span class=\"keyword\">int</span>, v2 <span class=\"keyword\">int</span>, op <span class=\"built_in\">string</span>) <span class=\"keyword\">int</span> &#123;</span><br><span class=\"line\">\tvar ret <span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> op == <span class=\"string\">\"+\"</span> &#123;</span><br><span class=\"line\">\t\tret= v1 + v2</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> op == <span class=\"string\">\"-\"</span> &#123;</span><br><span class=\"line\">\t\tret = v1 - v2</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> op == <span class=\"string\">\"*\"</span> &#123;</span><br><span class=\"line\">\t\tret = v1 * v2</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func diffWaysToCompute(input <span class=\"built_in\">string</span>) []<span class=\"keyword\">int</span> &#123;</span><br><span class=\"line\">\tret := make([]<span class=\"keyword\">int</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> len(input) == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> len(input) == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\tval, _ := strconv.Atoi(input)</span><br><span class=\"line\">\t\tret = append(ret, val)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlength := len(input)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; length; i++ &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> !isDigit(<span class=\"built_in\">string</span>(input[i])) &#123;</span><br><span class=\"line\">\t\t\tstrLeft := input[<span class=\"number\">0</span>:i]</span><br><span class=\"line\">\t\t\tstrRight := input[i+<span class=\"number\">1</span>:]</span><br><span class=\"line\">\t\t\tleft := diffWaysToCompute(strLeft)</span><br><span class=\"line\">\t\t\tright := diffWaysToCompute(strRight)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> _, v1 := range left &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> _, v2 := range right &#123;</span><br><span class=\"line\">\t\t\t\t\tret = append(ret, calValue(v1, v2, <span class=\"built_in\">string</span>(input[i])))</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tinput := <span class=\"string\">\"2*3-4*5\"</span></span><br><span class=\"line\">\tret := diffWaysToCompute(input)</span><br><span class=\"line\">\tfmt.Println(ret)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","next":{"title":"Algorithm-Problem-电话号码的字母组合","slug":"Algorithm-Problem-电话号码的字母组合"},"link":"http://yoursite.com/post/Algorithm-Problem-为运算表达式设计优先级/"}