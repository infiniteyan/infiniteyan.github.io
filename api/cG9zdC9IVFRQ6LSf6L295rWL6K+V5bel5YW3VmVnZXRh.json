{"title":"HTTP负载测试工具Vegeta","date":"2019-04-23T03:43:20.000Z","slug":"HTTP负载测试工具Vegeta","comments":true,"updated":"2019-04-23T03:56:33.295Z","content":"<h4 id=\"Vegeta\">Vegeta<a href=\"post/HTTP负载测试工具Vegeta#Vegeta\"></a></h4><p>Vegeta 是一个用 Go 语言编写的多功能的 HTTP 负载测试工具，它提供了命令行工具和一个开发库。<br>官方地址：<a href=\"https://github.com/tsenart/vegeta\" target=\"_blank\" rel=\"noopener\">https://github.com/tsenart/vegeta</a></p>\n<p>macOS上安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install vegeta</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"用法\">用法<a href=\"post/HTTP负载测试工具Vegeta#用法\"></a></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: vegeta [global flags] &lt;command&gt; [command flags]</span><br><span class=\"line\"></span><br><span class=\"line\">global flags:</span><br><span class=\"line\">  -cpus int</span><br><span class=\"line\">    \t使用CUP的数量 (默认 4 个)</span><br><span class=\"line\">  -profile string</span><br><span class=\"line\">    \tEnable profiling of [cpu, heap]</span><br><span class=\"line\">  -version</span><br><span class=\"line\">    \t打印版本并退出</span><br><span class=\"line\"></span><br><span class=\"line\">attack command:</span><br><span class=\"line\">  -body string</span><br><span class=\"line\">    \t请求的主体文件</span><br><span class=\"line\">  -cert string</span><br><span class=\"line\">    \tTLS客户PEM编码的证书文件</span><br><span class=\"line\">  -connections int</span><br><span class=\"line\">    \t没个目标主机最大打开闲置链接数 (默认 10000)</span><br><span class=\"line\">  -duration duration</span><br><span class=\"line\">    \t持续攻击时间 [0 = forever]</span><br><span class=\"line\">  -header value</span><br><span class=\"line\">    \t请求头</span><br><span class=\"line\">  -insecure</span><br><span class=\"line\">    \t忽略无效的服务器TLS证书</span><br><span class=\"line\">  -keepalive</span><br><span class=\"line\">    \t使用持久链接 (default true)</span><br><span class=\"line\">  -key string</span><br><span class=\"line\">    \tTLS客户端PEM编码的私钥文件</span><br><span class=\"line\">  -laddr value</span><br><span class=\"line\">    \t本地IP地址 (default 0.0.0.0)</span><br><span class=\"line\">  -lazy</span><br><span class=\"line\">    \t延迟懒散的读取目标</span><br><span class=\"line\">  -output string</span><br><span class=\"line\">    \t输出文件 (default &quot;stdout&quot;)</span><br><span class=\"line\">  -rate uint</span><br><span class=\"line\">    \t每秒请求数 (default 50)</span><br><span class=\"line\">  -redirects int</span><br><span class=\"line\">    \t遵循重定向的次数. -1 不会遵循重定向但会标记为成功 (默认 10)</span><br><span class=\"line\">  -root-certs value</span><br><span class=\"line\">    \tTLS根证书文件 (逗号分隔列表)</span><br><span class=\"line\">  -targets string</span><br><span class=\"line\">    \t目标文件 (default &quot;stdin&quot;)</span><br><span class=\"line\">  -timeout duration</span><br><span class=\"line\">    \t请求超时时间 (default 30s)</span><br><span class=\"line\">  -workers uint</span><br><span class=\"line\">    \t初始化进程数 (default 10)</span><br><span class=\"line\"></span><br><span class=\"line\">report command:</span><br><span class=\"line\">  -inputs string</span><br><span class=\"line\">    \t输入文件 (comma separated) (default &quot;stdin&quot;)</span><br><span class=\"line\">  -output string</span><br><span class=\"line\">    \t输出文件 (default &quot;stdout&quot;)</span><br><span class=\"line\">  -reporter string</span><br><span class=\"line\">    \t表报字符格式 [text, json, plot, hist[buckets]] (default &quot;text&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">dump command:</span><br><span class=\"line\">  -dumper string</span><br><span class=\"line\">    \tDumper [json, csv] (default &quot;json&quot;)</span><br><span class=\"line\">  -inputs string</span><br><span class=\"line\">    \tInput files (comma separated) (default &quot;stdin&quot;)</span><br><span class=\"line\">  -output string</span><br><span class=\"line\">    \tOutput file (default &quot;stdout&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">举例:</span><br><span class=\"line\">  echo &quot;GET http://localhost/&quot; | vegeta attack -duration=5s | tee results.bin | vegeta report</span><br><span class=\"line\">  vegeta attack -targets=targets.txt &gt; results.bin</span><br><span class=\"line\">  vegeta report -inputs=results.bin -reporter=json &gt; metrics.json</span><br><span class=\"line\">  cat results.bin | vegeta report -reporter=plot &gt; plot.html</span><br><span class=\"line\">  cat results.bin | vegeta report -reporter=&quot;hist[0,100ms,200ms,300ms]&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用目标文件的内容进行压测\">使用目标文件的内容进行压测<a href=\"post/HTTP负载测试工具Vegeta#使用目标文件的内容进行压测\"></a></h4><p>创建目标文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim target.txt</span><br><span class=\"line\">GET http://localhost:12345/people</span><br></pre></td></tr></table></figure></p>\n<p>执行压测<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vegeta attack -targets=&quot;target.txt&quot; -rate=10 -duration=2s  &gt; results.bin</span><br></pre></td></tr></table></figure></p>\n<p>除了前面定义的最简单HTTP GET请求外，你还可以定义下面这些更灵活更复杂的HTTP请求：<br>1.自定义请求头<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET http://user:password@hi-linux.com:80/path/to</span><br><span class=\"line\">X-Account-ID: 8675309</span><br><span class=\"line\"></span><br><span class=\"line\">DELETE http://hi-linux.com:80/path/to/remove</span><br><span class=\"line\">Confirmation-Token: 90215</span><br><span class=\"line\">Authorization: Token DEADBEEF</span><br></pre></td></tr></table></figure></p>\n<p>2.自定义请求的主体<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST http://hi-linux.com:80/things</span><br><span class=\"line\">@/path/to/newthing.json</span><br><span class=\"line\"></span><br><span class=\"line\">PATCH http://hi-linux.com:80/thing/71988591</span><br><span class=\"line\">@/path/to/thing-71988591.json</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"生成压测报告\">生成压测报告<a href=\"post/HTTP负载测试工具Vegeta#生成压测报告\"></a></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat results.bin | vegeta plot &gt; plot.html</span><br></pre></td></tr></table></figure>\n<p>plot.html<br><img src=\"/2019/04/23/HTTP负载测试工具Vegeta/vegeta-plot.png\" alt=\"aa\"></p>\n","next":{"title":"GO语言RESTful API的简单实现","slug":"GO语言RESTful-API的简单实现"},"link":"http://yoursite.com/post/HTTP负载测试工具Vegeta/"}