{"title":"cpp中虚函数表","date":"2019-02-27T02:42:51.000Z","slug":"cpp中虚函数表","comments":true,"updated":"2019-02-27T02:52:45.664Z","content":"<h2 id=\"概述\">概述<a href=\"post/cpp中虚函数表#概述\"></a></h2><p>为了实现C++的多态，C++使用了一种动态绑定的技术。这个技术的核心是虚函数表（下文简称虚表）。本文介绍虚函数表是如何实现动态绑定的。</p>\n<h2 id=\"类的虚表\">类的虚表<a href=\"post/cpp中虚函数表#类的虚表\"></a></h2><p>每个包含了虚函数的类都包含一个虚表。<br>我们知道，当一个类（A）继承另一个类（B）时，类A会继承类B的函数的调用权。所以如果一个基类包含了虚函数，那么其继承类也可调用这些虚函数，换句话说，一个类继承了包含虚函数的基类，那么这个类也拥有自己的虚表。</p>\n<p>我们来看以下的代码。类A包含虚函数vfunc1，vfunc2，由于类A包含虚函数，故类A拥有一个虚表。<br>class A {<br>public:<br>    virtual void vfunc1();<br>    virtual void vfunc2();<br>    void func1();<br>    void func2();<br>private:<br>    int m_data1, m_data2;<br>};</p>\n<div class=\"article-img\"><p><img src=\"cpp中虚函数表/001.png\" alt=\"类A的虚表如图1所示\" data-zoomable></p></div>\n","next":{"title":"Hello World","slug":"hello-world"},"link":"http://yoursite.com/post/cpp中虚函数表/","toc":[{"title":"概述","id":"概述","index":"1"},{"title":"类的虚表","id":"类的虚表","index":"2"}]}